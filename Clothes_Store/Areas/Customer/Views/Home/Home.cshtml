@using Clothes_Models.ViewModels
@model HomeViewModel

@{
    ViewData["Title"] = "Home Page";
    var showSuccessMessage = TempData["AddToCartSuccess"] != null && (bool)TempData["AddToCartSuccess"];
    var showErrorMessage = TempData["AddToCartError"] != null && (bool)TempData["AddToCartError"];
    var errorMessage = TempData["ErrorMessage"]?.ToString() ?? "An error occurred while adding to cart";
    var currentCategory = ViewBag.CurrentCategory?.ToString() ?? string.Empty;
    var currentCategoryId = ViewBag.CurrentCategoryId?.ToString() ?? string.Empty;
}
<link rel="stylesheet" href="~/css/style.css">
<style>
    /* Quick View Modal */
.quick-view-modal {
    background-color: white;
    border-radius: 0.75rem; /* Softer corners */
    width: 90%;
    max-width: 700px;
    padding: 1.5rem;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15); /* Enhanced shadow for depth */
    display: flex;
    flex-direction: column;
    gap: 1rem;
    position: relative;
    overflow: hidden;
}

.quick-view-content {
    display: flex;
    gap: 1.5rem;
}

.quick-view-image {
    flex: 1;
}

.quick-view-image img {
    width: 100%;
    max-width: 400px;
    height: auto;
    border-radius: 0.5rem;
    object-fit: cover;
}

.quick-view-details {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
}

.quick-view-rating {
    display: flex;
    align-items: center;
    gap: 0.25rem;
}

.quick-view-rating i {
    color: #f5c518;
    font-size: 1rem; /* Slightly larger for visibility */
}

.quick-view-price {
    font-size: 1.5rem; /* Larger for emphasis */
    font-weight: 600;
    color: #088178;
}

.quick-view-description {
    font-size: 0.95rem;
    color: #666;
    line-height: 1.6;
}

.quick-view-sizes {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.size-label {
    font-weight: 500;
    color: #333;
    font-size: 1rem;
}

.quick-view-modal .size-options {
    display: flex;
    flex-direction: row;
    gap: 0.5rem;
    flex-wrap: wrap;
    margin-bottom: 1rem;
}

.quick-view-modal .size-option {
    border: 1px solid #cce7d0;
    background-color: #e8f6ea;
    color: #088178;
    border-radius: 0.5rem;
    padding: 0.5rem 1rem;
    cursor: pointer;
    transition: all 0.3s ease;
    text-align: center;
    font-size: 0.9rem;
    min-width: 50px;
    flex: 0 0 auto;
}

.quick-view-modal .size-option:hover {
    background-color: #088178;
    color: white;
    border-color: #088178;
    transform: scale(1.05); /* Subtle hover animation */
}

.quick-view-modal .size-option.selected {
    background-color: #088178;
    color: white;
    border-color: #088178;
}

.quick-view-actions {
    margin-top: 1rem;
}

.quick-view-actions .confirm-button {
    width: 100%;
    padding: 0.75rem;
    font-size: 1rem;
    background-color: #088178;
    border: 1px solid #088178;
    color: white;
    border-radius: 0.5rem;
    cursor: pointer;
    transition: all 0.3s ease;
}

.quick-view-actions .confirm-button:hover {
    background-color: #066156;
    transform: scale(1.02);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
}

.modal-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: #333;
}

.close-modal {
    background: none;
    border: none;
    font-size: 1.75rem; /* Larger for easy tapping */
    cursor: pointer;
    color: #666;
    transition: color 0.2s ease;
}

.close-modal:hover {
    color: #088178;
}

/* Quantity Selector */
.quantity-selector {
    display: flex;
    align-items: center;
    margin: 1rem 0;
    justify-content: flex-start;
}

.quantity-label {
    margin-right: 1rem;
    font-weight: 500;
    color: #333;
    font-size: 1rem;
}

.quantity-controls {
    display: flex;
    align-items: center;
    border: 1px solid #cce7d0;
    border-radius: 0.5rem;
    overflow: hidden;
    background-color: #f8f9fa;
}

.quantity-btn {
    width: 2.5rem;
    height: 2.5rem;
    background-color: #e8f6ea;
    border: none;
    font-size: 1.2rem;
    color: #088178;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
}

.quantity-btn:hover {
    background-color: #cce7d0;
}

.quantity-input {
    width: 3.5rem;
    height: 2.5rem;
    text-align: center;
    border: none;
    border-left: 1px solid #cce7d0;
    border-right: 1px solid #cce7d0;
    font-size: 1rem;
    font-weight: 500;
    padding: 0 0.5rem;
    -moz-appearance: textfield;
    background-color: white;
}

.quantity-input::-webkit-outer-spin-button,
.quantity-input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

.quantity-input:focus {
    outline: none;
    box-shadow: 0 0 0 2px rgba(8, 129, 120, 0.2);
}

/* Modal Animation */
    @@keyframes modalFadeIn {
    from {
        opacity: 0;
        transform: scale(0.95);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

.animate-modal {
    animation: modalFadeIn 0.3s ease-out forwards;
}

/* Mobile-Specific Styles for Quick View Modal */
    @@media (max-width: 768px) {
    .quick-view-modal {
        max-width: 90%; /* Smaller width */
        padding: 0.75rem; /* Minimal padding */
        border-radius: 0.5rem;
        max-height: 80vh; /* Limit height */
        overflow-y: auto; /* Scroll if content overflows */
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2); /* Stronger shadow for depth */
    }

    .quick-view-content {
        flex-direction: column; /* Stack image and details */
        gap: 0.75rem; /* Tighter gap */
    }

    .quick-view-image {
        width: 100%;
        display: flex;
        justify-content: center;
    }

    .quick-view-image img {
        max-width: 150px; /* Smaller image */
        max-height: 150px;
        border-radius: 0.5rem;
    }

    .quick-view-details {
        gap: 0.5rem; /* Tighter spacing */
    }

    .modal-title {
        font-size: 1.1rem; /* Smaller title */
    }

    .quick-view-price {
        font-size: 1.1rem;
    }

    .quick-view-description {
        font-size: 0.8rem;
        line-height: 1.4;
        max-height: 50px; /* Limit height */
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .quick-view-sizes {
        gap: 0.3rem;
    }

    .size-label {
        font-size: 0.85rem;
    }

    .quick-view-modal .size-options {
        gap: 0.3rem;
        margin-bottom: 0.5rem;
    }

    .quick-view-modal .size-option {
        padding: 0.3rem 0.7rem;
        font-size: 0.8rem;
        min-width: 35px;
    }

    .quantity-selector {
        flex-direction: column; /* Stack label and controls */
        align-items: flex-start;
        gap: 0.3rem;
        margin: 0.75rem 0;
    }

    .quantity-label {
        font-size: 0.85rem;
    }

    .quantity-controls {
        width: 100%; /* Full width for touch */
    }

    .quantity-btn {
        width: 2.25rem; /* Tappable size */
        height: 2.25rem;
        font-size: 1rem;
    }

    .quantity-input {
        width: 3rem;
        height: 2.25rem;
        font-size: 0.85rem;
    }

    .quick-view-actions .confirm-button {
        padding: 0.75rem;
        font-size: 0.9rem;
        border-radius: 0.5rem;
    }

    .close-modal {
        font-size: 1.25rem; /* Tappable size */
        position: absolute;
        top: 0.5rem;
        right: 0.5rem;
    }
}

    @@media (max-width: 480px) {
    .quick-view-modal {
        max-width: 95%;
        padding: 0.5rem;
        max-height: 75vh;
    }

    .quick-view-image img {
        max-width: 120px;
        max-height: 120px;
    }

    .modal-title {
        font-size: 1rem;
    }

    .quick-view-price {
        font-size: 1rem;
    }

    .quick-view-description {
        font-size: 0.75rem;
        max-height: 40px;
    }

    .quick-view-modal .size-option {
        padding: 0.25rem 0.6rem;
        font-size: 0.75rem;
        min-width: 30px;
    }

    .quantity-btn {
        width: 2rem;
        height: 2rem;
    }

    .quantity-input {
        width: 2.5rem;
        height: 2rem;
        font-size: 0.8rem;
    }

    .quick-view-actions .confirm-button {
        padding: 0.6rem;
        font-size: 0.85rem;
    }

    .close-modal {
        font-size: 1.1rem;
    }
}

/* Size and Quantity Selection Modal Size Options */
.size-modal .size-options {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 0.75rem;
    margin-bottom: 1.5rem;
}

.size-modal .size-option {
    border: 1px solid #cce7d0;
    background-color: #e8f6ea;
    color: #088178;
    border-radius: 0.5rem;
    padding: 0.5rem 1rem;
    cursor: pointer;
    transition: all 0.3s ease;
    text-align: center;
}

.size-modal .size-option:hover {
    background-color: #088178;
    color: white;
    border-color: #088178;
}

.size-modal .size-option.active {
    background-color: #088178;
    color: white;
    border-color: #088178;
}

.size-modal .size-option.disabled {
    opacity: 0.5;
    cursor: not-allowed;
    text-decoration: line-through;
    position: relative;
}

.size-modal .size-option.disabled::after {
    content: "×";
    position: absolute;
    top: -5px;
    right: -5px;
    background: #ef4444;
    color: white;
    border-radius: 50%;
    width: 18px;
    height: 18px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
}

/* Modal Overlay */
.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
}

.modal-overlay.active {
    opacity: 1;
    visibility: visible;
}

/* Size Modal */
.size-modal {
    background-color: white;
    border-radius: 0.5rem;
    width: 90%;
    max-width: 400px;
    padding: 1.5rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.modal-actions {
    display: flex;
    justify-content: flex-end;
    gap: 0.75rem;
}

.modal-button {
    padding: 0.5rem 1rem;
    border-radius: 0.25rem;
    cursor: pointer;
    transition: all 0.2s ease;
}

.cancel-button {
    background-color: #f5f5f5;
    border: 1px solid #ddd;
    color: #333;
}

.confirm-button {
    background-color: #088178;
    border: 1px solid #088178;
    color: white;
}

.confirm-button:disabled {
    opacity: 0.6;
    cursor: not-allowed;
}

/* Stock Info */
.stock-info {
    font-size: 0.85rem;
    color: #666;
    margin-top: 0.5rem;
    text-align: center;
}

/* Mobile-specific styles for Home Banner */
   @@media (max-width: 768px) {
    #home-banner {
        padding-top: 2rem;
        padding-bottom: 2rem;
    }

    #home-banner .relative {
        height: 300px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    #home-banner .bg-[url('/img/banner/HomeBanner.png')] {
        background-size: 100% auto;
        background-position: center 30%;
    }

    #home-banner .bg-black\/30 {
        opacity: 0.4;
    }

    #home-banner .p-4 {
        padding: 1rem;
    }

    #home-banner h2 {
        font-size: 1rem;
        margin-bottom: 0.75rem;
        color: #fff;
    }

    #home-banner p {
        font-size: 1.25rem;
        line-height: 1.4;
        color: #fff;
    }

    #home-banner a {
        padding: 0.75rem 2rem;
        font-size: 1rem;
        border-radius: 0.5rem;
        width: auto;
        max-width: 200px;
    }

    #home-banner a svg {
        height: 1.25rem;
        width: 1.25rem;
    }

    @@keyframes fade-in {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .animate-fade-in {
        animation: fade-in 0.8s ease-out forwards;
    }
}

    @@media (min-width: 769px) {
    #home-banner .bg-black\/30 {
        opacity: 0;
    }

    #home-banner h2 {
        color: #088178;
    }

    #home-banner p {
        color: #000;
    }
}

/* Animation styles */
.scroll-animate .animated-element {
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.scroll-animate.visible .animated-element {
    opacity: 1;
    transform: translateY(0);
}

.scroll-animate.visible .animated-element:nth-child(1) {
    transition-delay: 0.1s;
}

.scroll-animate.visible .animated-element:nth-child(2) {
    transition-delay: 0.3s;
}

.scroll-animate.visible .animated-element:nth-child(3) {
    transition-delay: 0.5s;
}

.scroll-animate.visible .animated-element:nth-child(4) {
    transition-delay: 0.7s;
}

/* Banner styles */
.banner-main {
    @@apply relative overflow-hidden rounded-[1.5rem] h-[480px] isolate;
}

.banner-content {
   @@apply relative z-10 p-8 h-full flex flex-col justify-center space-y-5 text-white;
}

/* Category Filter */
.filter-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
    gap: 1rem;
    flex-wrap: wrap;
}

.filter-options {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
}

.filter-btn {
    padding: 0.5rem 1rem;
    border: 1px solid #eeeeee;
    border-radius: 0.25rem;
    background-color: #eeeeee;
    color: #454545;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 0.95rem;
    font-weight: 500;
}

.filter-btn:hover {
    background-color: #fde1bd;
    border-color: #fde1bd;
    transform: translateY(-4px);
    color: #088178;
}

.filter-btn.active {
    background-color: #fde1bd;
    border-color: #fde1bd;
    color: #088178;
    font-weight: 600;
    transform: translateY(-2px);
}

    @@media (min-width: 1024px) {
    .pro {
        width: 100%;
        max-width: 160px;
    }

    .pro img {
        height: 160px;
        object-fit: cover;
    }

    .pro .des {
        padding: 0.5rem;
    }

    .pro .product-brand,
    .pro .product-description,
    .pro .product-price {
        font-size: 0.85rem;
    }

    .pro .star i {
        font-size: 0.75rem;
    }
}

.pro-cart-button {
    width: 40px;
    height: 40px;
    line-height: 40px;
    border-radius: 50px;
    background-color: #e8f6ea;
    font-weight: 500;
    color: #088178;
    border: 1px solid #cce7d0;
    position: absolute;
    bottom: 20px;
    right: 10px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    padding: 0;
    text-decoration: none;
    transition: all 0.3s ease;
}

.pro-cart-button:hover {
    background-color: #cce7d0;
    color: #066156;
    transform: scale(1.05);
}

/* Category Slider */
#categoriesWrapper {
    overflow-x: hidden;
}

#categoriesContainer {
    display: flex;
    flex-wrap: nowrap;
    gap: 1rem;
    will-change: transform;
    backface-visibility: hidden;
    perspective: 1000;
    scroll-snap-type: x mandatory;
}

.category-card {
    flex: 0 0 auto;
    width: 200px;
    height: 240px;
    padding: 0.75rem;
    border: 1px solid #cce7d0;
    border-radius: 1.5rem;
    cursor: pointer;
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.02);
    transition: box-shadow 0.2s ease, transform 0.2s ease;
    background-color: #fff;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    position: relative;
    scroll-snap-align: start;
}

.category-card:hover {
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.06);
    transform: translateY(-4px);
}

.category-card img {
    width: 100%;
    height: auto;
    max-height: 160px;
    object-fit: cover;
    border-radius: 1.25rem;
}

.category-card h4.category-name {
    font-size: 1rem;
    line-height: 1.5rem;
    font-weight: 600;
    color: #222;
    margin-top: 0.5rem;
    text-align: center;
}

.category-card:hover h4.category-name {
    color: #088178;
    transform: scale(1.05);
}

/* Responsive Adjustments */
    @@media (max-width: 1280px) {
    .category-card {
        width: 180px;
        height: 220px;
    }

    .category-card img {
        max-height: 140px;
    }

    .category-card h4.category-name {
        font-size: 0.875rem;
        line-height: 1.25rem;
    }
}

    @@media (max-width: 768px) {
    #popular-categories .navigation-buttons, #popular-Brands .navigation-buttons {
        display: none;
    }

    #categoriesContainer,
    #brandsContainer {
        flex-wrap: wrap;
        gap: 1rem;
        justify-content: center;
        scroll-snap-type: none;
    }

    .category-card {
        flex: 0 0 calc(50% - 0.5rem);
        width: auto;
        height: 180px;
        margin-bottom: 1rem;
    }

    .category-card img {
        max-height: 110px;
    }

    .category-card h4.category-name {
        font-size: 0.875rem;
        line-height: 1.25rem;
    }

    #popular-categories .flex.items-center.mb-12,
    #popular-Brands .flex.items-center.mb-12 {
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
    }
}

    @@media (max-width: 480px) {
    .category-card {
        flex: 0 0 calc(50% - 0.5rem);
        max-width: 160px;
        height: 160px;
        margin-bottom: 0.5rem;
    }

    .category-card img {
        max-height: 100px;
    }

    .category-card h4.category-name {
        font-size: 0.75rem;
        line-height: 1.1rem;
    }

    #popular-categories,
    #popular-Brands {
        padding-left: 0.5rem;
        padding-right: 0.5rem;
    }

    #categoriesContainer,
    #brandsContainer {
        gap: 0.5rem;
        justify-content: center;
    }
}

/* New Arrivals */
#brandsWrapper {
    overflow-x: hidden;
}

#brandsContainer {
    display: flex;
    flex-wrap: nowrap;
    gap: 1rem;
    will-change: transform;
    backface-visibility: hidden;
    perspective: 1000;
    scroll-snap-type: x mandatory;
}

/* Three Banners */
.banners {
    background-color: #fff;
    padding: 1rem 1rem 5rem 1rem;
}

.banner-img {
    position: relative;
    overflow: hidden;
}

.banner-text {
    position: absolute;
    top: 50%;
    right: 10%;
    transform: translateY(-50%);
    text-align: left;
    color: #fff;
    transition: transform 0.3s ease;
}

.banner-img:hover .banner-text {
    transform: translateY(-50%) translateX(-10px);
}

.banner-text span {
    font-size: 14px;
    font-weight: 400;
    display: block;
    color: silver;
    font-family: 'Roboto', sans-serif;
}

.banner-text h4 {
    font-size: 24px;
    font-weight: 600;
    margin: 10px 0;
    font-family: 'Roboto', sans-serif;
}

.banner-text a {
    color: #088178;
    text-decoration: none;
    font-weight: 300;
    font-family: 'Arial', sans-serif;
}

.banner-text a:hover {
    color: #046963;
}

.wow {
    visibility: hidden;
}

.wow.fadeIn {
    animation-name: fadeIn;
    animation-duration: 1s;
    animation-fill-mode: both;
}

    @@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

.banner-img img {
    width: 100%;
    height: auto;
    display: block;
    aspect-ratio: 16/9;
}

.container {
    width: 100%;
    padding-right: 8px;
    padding-left: 8px;
    margin-right: auto;
    margin-left: auto;
    max-width: 80rem;
}

.row {
    display: flex;
    flex-wrap: wrap;
    margin-right: -8px;
    margin-left: -8px;
    gap: 0.5rem;
}

.col-lg-4 {
    flex: 0 0 33.333333%;
    max-width: 33.333333%;
    padding: 0 8px;
}

.d Ascot: none;
display: block !important;
}

.d-md-none {
    display: block !important;
}

.d-lg-flex {
    display: block !important;
}

.mb-sm-0 {
    margin-bottom: 0;
}

    @@media (max-width: 639px) {
    .banner-img {
        max-width: 100%;
        margin: 0 auto;
    }

    .banner-text span {
        font-size: 12px;
    }

    .banner-text h4 {
        font-size: 18px;
    }

    .banner-text a {
        font-size: 12px;
    }

    .col-lg-4 {
        flex: 0 0 100%;
        max-width: 100%;
    }
}

    @@media (min-width: 640px) {
    .banners {
        padding-left: 1.5rem;
        padding-right: 1.5rem;
    }
}

    @@media (min-width: 768px) {
    .col-lg-4 {
        flex: 0 0 33.333333%;
        max-width: 33.333333%;
    }

    .d-md-none {
        display: flex !important;
    }

    .d-lg-flex {
        display: flex !important;
    }
}

    @@media (min-width: 1024px) {
    .banners {
        padding-left: 2rem;
        padding-right: 2rem;
    }

    .row {
        flex-wrap: nowrap;
    }
}

#brands {
    background-color: #ffffff !important;
}

body {
    background-color: #ffffff !important;
    margin: 0;
}

section, div {
    background-color: transparent;
}

/* Back to top button */
.back-to-top {
    position: fixed;
    bottom: 30px;
    right: 30px;
    width: 50px;
    height: 50px;
    background-color: #088178;
    color: white;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 20px;
    cursor: pointer;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    z-index: 999;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.back-to-top:hover {
    background-color: #066156;
    transform: translateY(-3px);
}

.back-to-top.visible {
    opacity: 1;
    visibility: visible;
}

    @@media (max-width: 768px) {
    .back-to-top {
        width: 40px;
        height: 40px;
        font-size: 16px;
        bottom: 20px;
        right: 20px;
    }
}

#hero button a {
    text-decoration: none;
    color: #088178;
}

#hero {
    background-image: url("../img/hero6.png");
}

    @@media (max-width: 477px) {
    #hero {
        padding-bottom: 90px;
        background-position: 50% 30%;
        height: 70vh;
    }
}

/* Notification styles */
.notification-container {
    position: fixed;
    top: 1.5rem;
    right: 1.5rem;
    z-index: 1000;
}

.notification {
    padding: 1rem 1.5rem;
    color: white;
    border-radius: 0.75rem;
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    display: flex;
    align-items: center;
    transform: translateX(150%);
    transition: all 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    margin-bottom: 1rem;
    position: relative;
    overflow: hidden;
}

.notification.success {
    background-color: #088178;
}

.notification.error {
    background-color: #ef4444;
}

.notification.show {
    transform: translateX(0);
}

.notification.hide {
    transform: translateX(150%);
    opacity: 0;
}

.notification-icon {
    margin-right: 0.75rem;
    font-size: 1.25rem;
}

.notification-close {
    margin-left: 1rem;
    cursor: pointer;
    opacity: 0.7;
    transition: opacity 0.2s;
}

.notification-close:hover {
    opacity: 1;
}

.notification-progress {
    position: absolute;
    bottom: 0;
    left: 0;
    height: 4px;
    width: 100%;
    background: rgba(255, 255, 255, 0.3);
}

.notification-progress-bar {
    height: 100%;
    width: 100%;
    background: white;
    animation: progress 3s linear forwards;
    transform-origin: left;
}

    @@keyframes progress {
    0% {
        transform: scaleX(0);
    }
    100% {
        transform: scaleX(1);
    }
}

/* Bounce animation for cart button */
    @@keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
        transform: translateY(0);
    }
    40% {
        transform: translateY(-10px);
    }
    60% {
        transform: translateY(-5px);
    }
}

.bounce-effect {
    animation: bounce 1s;
}

/* View All Button */
.view-all-btn {
    display: inline-flex;
    align-items: center;
    padding: 0.5rem 1.25rem;
    background-color: #088178;
    color: white;
    border-radius: 4px;
    font-weight: 500;
    text-decoration: none;
    transition: all 0.3s ease;
}

.view-all-btn:hover {
    background-color: #066156;
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.view-all-btn i {
    transition: transform 0.3s ease;
}

.view-all-btn:hover i {
    transform: translateX(4px);
}

    @@media (max-width: 768px) {
    .view-all-btn {
        padding: 0.4rem 1rem;
        font-size: 0.9rem;
    }
}

.product-brand,
.product-description {
    transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.product-brand:hover,
.product-description:hover {
    color: #088178 !important;
    transform: translateY(-1px);
    cursor: pointer;
    text-decoration: none;
    text-underline-offset: 2px;
}

/* Icon Overlay for Quick View Button */
.icon-overlay {
    position: absolute;
    top: 10px;
    right: 10px;
    display: flex;
    flex-direction: column;
    gap: 10px;
    opacity: 0;
    transition: opacity 0.3s ease, transform 0.3s ease;
    transform: translateX(20px);
}

.pro:hover .icon-overlay {
    opacity: 1;
    transform: translateX(0);
}

.icon-overlay button {
    width: 38px;
    height: 38px;
    background-color: #088178;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 16px;
    border: 2px solid rgba(255, 255, 255, 0.8);
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
    transition: transform 0.2s ease, background-color 0.3s ease;
    cursor: pointer;
    padding: 0;
}

.icon-overlay button:hover {
    transform: scale(1.15);
    background-color: #066156;
}

/* Banner styles */
.banner-slide {
    background-size: cover;
    background-position: center;
    opacity: 0;
    z-index: 0;
    transition: opacity 1s ease-in-out;
}

.banner-slide:first-child {
    opacity: 1;
    z-index: 1;
}

    @@media (max-width: 768px) {
    #page-header {
        height: 30vh;
    }
}
</style>

<!-- Hero Section -->
<section id="hero" class="px-8 sm:px-12 lg:px-16 max-w-7xl mx-auto">
    <h4>Limited-Time Offer</h4>
    <h2>Exclusive Discounts</h2>
    <h1>Across All Categories</h1>
    <p>Grab extra coupons & save up to 70% today!</p>
    <button><a asp-controller="Home" asp-action="Shop">Shop now</a></button>
</section>
<div class="container mx-auto px-1 sm:px-2 lg:px-4">
    <!-- Notification Container -->
    <div class="notification-container">
        <!-- Notifications will be added here dynamically -->
    </div>
<!-- Quick View Modal -->
<div class="modal-overlay" id="quickViewModal">
    <div class="quick-view-modal animate-modal">
        <div class="modal-header">
            <h3 class="modal-title" id="quickViewProductName"></h3>
            <button class="close-modal" onclick="hideQuickViewModal()">×</button>
        </div>
        <div class="quick-view-content">
            <div class="quick-view-image">
                <img id="quickViewProductImage" src="" alt="Product Image">
            </div>
            <div class="quick-view-details">
                <div class="quick-view-rating" id="quickViewRating"></div>
                <h4 class="quick-view-price" id="quickViewPrice"></h4>
                <p class="quick-view-description" id="quickViewDescription"></p>
                <div class="quick-view-sizes">
                    <span class="size-label">Size:</span>
                    <div class="size-options" id="quickViewSizes"></div>
                </div>
                <div class="quick-view-actions">
                    <div class="quantity-selector">
                        <span class="quantity-label">Quantity:</span>
                        <div class="quantity-controls">
                            <button class="quantity-btn" id="quickViewDecrementQty">-</button>
                            <input type="number" id="quickViewQuantityInput" class="quantity-input" value="1" min="1" max="10">
                            <button class="quantity-btn" id="quickViewIncrementQty">+</button>
                        </div>
                    </div>
                    <button class="modal-button confirm-button" id="quickViewAddToCart">Add to Cart</button>
                </div>
            </div>
        </div>
    </div>
</div>
    <!-- Size and Quantity Selection Modal -->
    <div class="modal-overlay" id="sizeModal">
        <div class="size-modal">
            <div class="modal-header">
                <h3 class="modal-title">Select Size & Quantity</h3>
                <button class="close-modal" onclick="hideSizeModal()">×</button>
            </div>
            <div class="size-options" id="sizeOptionsContainer">
                <!-- Size options populated dynamically -->
            </div>
            <div class="quantity-selector">
                <span class="quantity-label">Quantity:</span>
                <div class="quantity-controls">
                    <button class="quantity-btn" id="decrementQty">-</button>
                    <input type="number" id="quantityInput" class="quantity-input" value="1" min="1" max="10">
                    <button class="quantity-btn" id="incrementQty">+</button>
                </div>
            </div>
            <div class="stock-info" id="stockInfo"></div>
            <div class="modal-actions">
                <button class="modal-button cancel-button" onclick="hideSizeModal()">Cancel</button>
                <button class="modal-button confirm-button" id="confirmAddToCart" disabled>Add to Cart</button>
            </div>
        </div>
    </div>
    <!-- Explore Products Section -->
    <section id="product1" class="px-8 sm:px-12 lg:px-16 pt-20 pb-4 bg-white max-w-7xl mx-auto">
        <div class="max-w-7xl mx-auto">
            <div class="flex justify-between items-center mb-4">
                <div class="text-left">
                    <h2 class="text-3xl font-bold text-gray-800 mb-1">
                        Explore <span class="text-[#088178]">Products</span>
                    </h2>
                    <p class="text-lg text-gray-600 max-w-2xl">
                        Browse our curated collection of <span class="text-[#088178]">premium fashion</span> items
                    </p>
                </div>
                @if (Model.FeaturedProducts.Any())
                {
                    <a href="@Url.Action("Shop", "Home", new { area = "Customer" })"
                       class="group text-[#088178] text-sm sm:text-base font-medium transition-all duration-300 hover:text-[#065f5b] hover:underline flex items-center">
                        View All
                        <i class="fas fa-arrow-right ml-2 transform transition-transform duration-300 group-hover:translate-x-1"></i>
                    </a>
                }
            </div>
            <div class="filter-container">
                <div class="filter-options">
                    <button class="filter-btn @(string.IsNullOrEmpty(currentCategoryId) ? "active" : "")"
                            data-category-id=""
                            data-category="">
                        All Products
                    </button>
                    <button class="filter-btn @(currentCategoryId == "17" ? "active" : "")"
                            data-category-id="17"
                            data-category="Men's Fashion">
                        Men's Fashion
                    </button>
                    <button class="filter-btn @(currentCategoryId == "18" ? "active" : "")"
                            data-category-id="18"
                            data-category="Women's Fashion">
                        Women's Fashion
                    </button>
                    <button class="filter-btn @(currentCategoryId == "19" ? "active" : "")"
                            data-category-id="19"
                            data-category="Kids Fashion">
                        Kids Fashion
                    </button>
                    <button class="filter-btn @(currentCategoryId == "55" ? "active" : "")"
                            data-category-id="55"
                            data-category="Unisex">
                        Unisex
                    </button>
                </div>
            </div>

            <div id="productContainer" class="pro-container mb-12 grid grid-cols-1 sm:grid-cols-4 lg:grid-cols-8 gap-6">
                @if (Model.FeaturedProducts.Any())
                {
                    @foreach (var product in Model.FeaturedProducts)
                    {
                        <div class="pro group cursor-pointer relative">
                            <div class="relative overflow-hidden rounded-2xl">
                                <img src="@product.imgUrl" alt="@product.Product_Name" class="product-img w-full h-auto object-cover transition-transform duration-700 group-hover:scale-110">
                                @if (product.IsFeatured)
                                {
                                    <span class="absolute top-2 left-2 bg-[#088178] text-white text-xs font-bold px-2 py-1 rounded-full shadow-sm">
                                        FEATURED
                                    </span>
                                }
                                <div class="icon-overlay">
                                    <button onclick="event.stopPropagation(); showQuickViewModal(@product.Product_Id);">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="des p-4">
                                <span class="product-brand">@product.BrandName</span>
                                <h5 class="product-description">@product.Product_Name</h5>
                                <div class="star">
                                    @for (int i = 0; i < product.Product_Rating; i++)
                                    {
                                        <i class="fas fa-star"></i>
                                    }
                                    @for (int i = product.Product_Rating; i < 5; i++)
                                    {
                                        <i class="far fa-star"></i>
                                    }
                                </div>
                                <h4 class="product-price">$@product.Product_Price</h4>
                            </div>
                            <div class="pro-cart-button absolute bottom-4 right-4" onclick="event.stopPropagation(); showSizeModal(@product.Product_Id)">
                                <i class="fas fa-shopping-cart text-[#088178]"></i>
                            </div>
                            <form class="add-to-cart-form" data-product-id="@product.Product_Id" style="display: none;">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="productId" value="@product.Product_Id" />
                                <input type="hidden" name="quantity" id="quantity-@product.Product_Id" value="1" />
                                <input type="hidden" name="size" id="size-@product.Product_Id" value="" />
                            </form>
                        </div>
                    }
                }
                else
                {
                    <div class="w-full flex flex-col items-center justify-center py-12 px-4">
                        <div class="text-center max-w-md mx-auto">
                            <div class="mb-6">
                                <i class="fas fa-star text-gray-300 text-5xl animate-pulse"></i>
                            </div>
                            <h3 class="text-2xl font-semibold text-gray-800 mb-3">No Products Found</h3>
                            <p class="text-gray-600 mb-6 leading-relaxed">
                                No products match your selection. Explore our full collection to find your style!
                            </p>
                            <div class="mt-6">
                                <a href="@Url.Action("Shop", "Home", new { area = "Customer" })"
                                   class="inline-flex items-center px-6 py-3 bg-primary text-white rounded-lg hover:bg-primary-dark transition-all duration-300 transform hover:scale-105 shadow-md">
                                    <i class="fas fa-store mr-3"></i>
                                    <span class="font-medium">Explore All Products</span>
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>
    <!-- Home Banner Section -->
    <section id="home-banner" class="px-4 sm:px-6 lg:px-16 py-6 bg-white max-w-7xl mx-auto">
        <div class="max-w-7xl mx-auto">
            <div class="relative overflow-hidden rounded-2xl h-[300px] sm:h-[400px] lg:h-[400px] group">
                <!-- Background Image -->
                <div class="absolute inset-0 bg-[url('/img/banner/HomeBanner.png')] bg-cover bg-center sm:bg-contain sm:bg-no-repeat bg-[length:100%_auto]"></div>
                <!-- Subtle Hover Overlay -->
                <div class="absolute inset-0 bg-black/30 sm:bg-white/15 opacity-100 sm:opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                <!-- Content Container -->
                <div class="relative z-10 p-4 sm:p-6 lg:p-8 h-full flex flex-col justify-center items-center sm:items-end text-center sm:text-right font-['Montserrat',sans-serif] animate-fade-in">
                    <div class="w-full max-w-md">
                        <h2 class="text-base sm:text-base font-medium mb-3 text-[#088178] tracking-wider">
                            Shop With Style
                        </h2>
                        <p class="text-xl sm:text-2xl lg:text-3xl font-bold mb-4 text-white sm:text-black tracking-tight leading-tight">
                            Discover the Latest<br>Fashion Trends Today
                        </p>
                    </div>
                    <a asp-action="shop" class="inline-flex items-center bg-[#088178] text-white font-medium py-3 px-6 sm:px-6 rounded-md w-max transition-all duration-300 group/button hover:bg-[#066156] shadow-md hover:shadow-lg">
                        <span class="text-base sm:text-base">Discover</span>
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 sm:h-5 sm:w-5 ml-2 opacity-0 group-hover/button:opacity-100 transform translate-x-0 group-hover/button:translate-x-1 transition-all duration-300" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                        </svg>
                    </a>
                </div>
            </div>
        </div>
    </section>

     <!-- popular Brands Section -->
    <section id="popular-Brands" class="px-4 sm:px-6 lg:px-8 pt-4 pb-20 bg-white max-w-7xl mx-auto">
        <div class="max-w-7xl mx-auto">
            <div class="flex items-center justify-between mb-12">
                <h2 class="text-3xl md:text-4xl font-bold">
                    Popular <span class="text-[#088178]">Brands</span>
                </h2>
                <div class="flex space-x-4 navigation-buttons">
                    <button id="prevBrand" class="w-10 h-10 flex items-center justify-center rounded-full bg-[#088178] hover:bg-[#066156] text-white hover:text-white transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed" aria-label="Previous Brand">
                        <i class="fas fa-chevron-left"></i>
                    </button>
                    <button id="nextBrand" class="w-10 h-10 flex items-center justify-center rounded-full bg-[#088178] hover:bg-[#066156] text-white hover:text-white transition-all duration-300" aria-label="Next Brand">
                        <i class="fas fa-chevron-right"></i>
                    </button>
                </div>
            </div>
            <div class="relative overflow-hidden">
                <div id="brandsWrapper" class="w-full overflow-hidden mx-auto">
                    <div id="brandsContainer" class="flex items-start flex-nowrap gap-6" data-brands="@Json.Serialize(ViewBag.Brands ?? new List<object>())">
                        <!-- Cards generated by JavaScript -->
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Three Banners Section -->
    <section class="banners bg-white px-4 sm:px-6 lg:px-8 pt-4 pb-20 max-w-7xl mx-auto">
        <div class="container max-w-7xl mx-auto">
            <div class="row flex flex-wrap -mx-2 gap-2">
                <div class="col-lg-4 d-md-none d-lg-flex px-2">
                    <div class="banner-img relative overflow-hidden wow fadeIn animated mb-0" style="visibility: visible;">
                        <div class="relative group">
                            <img src="~/img/banner/banner3.png" alt="" class="w-full h-auto block" style="aspect-ratio: 16/9;">
                            <div class="absolute inset-0 bg-white/15 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                        </div>
                        <div class="banner-text absolute top-1/2 right-[10%] -translate-y-1/2 text-left text-white group-hover:-translate-x-2.5 transition-transform duration-300">
                            <span class="block text-xs font-normal text-gray-400 font-['Roboto',sans-serif]">New Arrival</span>
                            <h4 class="text-xl font-semibold my-2.5 font-['Roboto',sans-serif]">Buy Today <br>Deals & Offers</h4>
                            <a asp-action="shop" class="text-[#088178] no-underline font-light text-sm font-['Arial',sans-serif] hover:text-[#046963] transition-colors">
                                Buy
                                <svg class="inline-block w-4 h-4 ml-1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <path d="M5 12h14M12 5l7 7-7 7" />
                                </svg> Now
                            </a>
                        </div>
                    </div>
                </div>

                <div class="col-lg-4 d-md-none d-lg-flex px-2">
                    <div class="banner-img relative overflow-hidden wow fadeIn animated" style="visibility: visible;">
                        <div class="relative group">
                            <img src="~/img/banner/banner2.png" alt="" class="w-full h-auto block" style="aspect-ratio: 16/9;">
                            <div class="absolute inset-0 bg-white/15 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                        </div>
                        <div class="banner-text absolute top-1/2 right-[10%] -translate-y-1/2 text-left text-white group-hover:-translate-x-2.5 transition-transform duration-300">
                            <span class="block text-xs font-normal text-gray-400 font-['Roboto',sans-serif]">Summer Sale</span>
                            <h4 class="text-xl font-semibold my-2.5 font-['Roboto',sans-serif]">Grab Cool <br>Styles</h4>
                            <a asp-action="shop" class="text-[#088178] no-underline font-light text-sm font-['Arial',sans-serif] hover:text-[#046963] transition-colors">
                                Buy
                                <svg class="inline-block w-4 h-4 ml-1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <path d="M5 12h14M12 5l7 7-7 7" />
                                </svg> Now
                            </a>
                        </div>
                    </div>
                </div>

                <div class="col-lg-4 d-md-none d-lg-flex px-2">
                    <div class="banner-img relative overflow-hidden wow fadeIn animated" style="visibility: visible;">
                        <div class="relative group">
                            <img src="~/img/banner/banner1.png" alt="" class="w-full h-auto block" style="aspect-ratio: 16/9;">
                            <div class="absolute inset-0 bg-white/15 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                        </div>
                        <div class="banner-text absolute top-1/2 right-[10%] -translate-y-1/2 text-left text-white group-hover:-translate-x-2.5 transition-transform duration-300">
                            <span class="block text-xs font-normal text-gray-400 font-['Roboto',sans-serif]">Hot Deal</span>
                            <h4 class="text-xl font-semibold my-2.5 font-['Roboto',sans-serif]">20% Off <br>Bags Now</h4>
                            <a asp-action="shop" class="text-[#088178] no-underline font-light text-sm font-['Arial',sans-serif] hover:text-[#046963] transition-colors">
                                Buy
                                <svg class="inline-block w-4 h-4 ml-1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <path d="M5 12h14M12 5l7 7-7 7" />
                                </svg> Now
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- New Arrivals Section -->
    <section id="product1" class="px-4 sm:px-6 lg:px-8 pt-4 pb-20 bg-white max-w-7xl mx-auto">
        <div class="max-w-7xl mx-auto">
            <div class="flex items-center justify-between mb-12">
                <h2 class="text-3xl md:text-4xl font-bold text-[#088178]">
                    New <span class="text-[#088178]">Arrivals</span>
                </h2>
                <div class="flex space-x-4 navigation-buttons">
                    <button id="prevProduct" class="w-10 h-10 flex items-center justify-center rounded-full bg-[#088178] hover:bg-[#066156] text-white transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed" aria-label="Previous Product">
                        <i class="fas fa-chevron-left"></i>
                    </button>
                    <button id="nextProduct" class="w-10 h-10 flex items-center justify-center rounded-full bg-[#088178] hover:bg-[#066156] text-white transition-all duration-300" aria-label="Next Product">
                        <i class="fas fa-chevron-right"></i>
                    </button>
                </div>
            </div>
            <div class="relative overflow-hidden">
                <div id="productsWrapper" class="w-full overflow-hidden mx-auto">
                    <div id="productsContainer" class="flex items-start flex-nowrap gap-6" data-products='@Html.Raw(Json.Serialize(Model.NewArrivals))'></div>
                </div>
            </div>
        </div>
    </section>

    <!-- ShopByCategory -->
    <section id="categories" class="py-16 bg-gradient-to-b">
        <div class="container mx-auto px-4 sm:px-6 lg:px-8 max-w-7xl">
            <!-- Section Header -->
            <div class="text-center mb-16">
                <h2 class="text-4xl font-bold text-gray-900 mb-4 relative inline-block">
                    <span class="bg-clip-text text-transparent bg-gradient-to-r from-[#088178] to-[#04a696]">
                        Shop by Category
                    </span>
                    <div class="absolute -bottom-2 left-1/2 transform -translate-x-1/2 w-24 h-1 bg-gradient-to-r from-[#088178] to-[#04a696]"></div>
                </h2>
                <p class="text-lg text-gray-600 max-w-2xl mx-auto">Discover our carefully curated collections for every style and occasion</p>
            </div>

            <!-- Category Grid -->
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 px-4">
                <!-- Men's Fashion Card -->
                <div class="group relative overflow-hidden rounded-3xl shadow-2xl hover:shadow-3xl transition-all duration-500">
                    <div class="absolute inset-0 bg-gradient-to-tr from-[#088178] to-[#04a696] opacity-10 z-0"></div>
                    <div class="flex flex-col lg:flex-row bg-white/95 backdrop-blur-sm">
                        <div class="lg:w-1/2 relative overflow-hidden">
                            <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent z-10"></div>
                            <img src="~/img/categories/Mens.png"
                                 alt="Men's Fashion"
                                 class="w-full h-full object-cover transform transition-transform duration-700 group-hover:scale-105">
                        </div>
                        <div class="lg:w-1/2 p-8 lg:p-10 flex flex-col justify-center relative">
                            <div class="absolute top-8 right-8 w-16 h-16 bg-[#088178] rounded-full opacity-10"></div>
                            <h3 class="text-3xl font-bold text-gray-900 mb-4 relative z-10">
                                Men's Fashion
                                <span class="block w-12 h-1 bg-[#04a696] mt-2"></span>
                            </h3>
                            <a href="@Url.Action("ShopByCategory", "Home", new { area = "Customer", category = "mens-fashion" })"
                               class="inline-flex items-center space-x-3 text-[#088178] hover:text-[#066156] transition-colors duration-300 group/link relative z-10">
                                <span class="text-lg font-semibold border-b-2 border-transparent hover:border-[#04a696] transition-all">
                                    Explore Collection
                                </span>
                                <svg class="w-6 h-6 transform group-hover/link:translate-x-2 transition-transform duration-300"
                                     fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
                                </svg>
                            </a>
                        </div>
                    </div>
                </div>

                <!-- Women's Fashion Card -->
                <div class="group relative overflow-hidden rounded-3xl shadow-2xl hover:shadow-3xl transition-all duration-500">
                    <div class="absolute inset-0 bg-gradient-to-tr from-[#d4145a] to-[#fbb03b] opacity-10 z-0"></div>
                    <div class="flex flex-col lg:flex-row bg-white/95 backdrop-blur-sm">
                        <div class="lg:w-1/2 relative overflow-hidden order-last">
                            <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent z-10"></div>
                            <img src="~/img/categories/Womens.png"
                                 alt="Women's Fashion"
                                 class="w-full h-full object-cover transform transition-transform duration-700 group-hover:scale-105">
                        </div>
                        <div class="lg:w-1/2 p-8 lg:p-10 flex flex-col justify-center relative">
                            <div class="absolute top-8 left-8 w-16 h-16 bg-[#d4145a] rounded-full opacity-10"></div>
                            <h3 class="text-3xl font-bold text-gray-900 mb-4 relative z-10">
                                Women's Fashion
                                <span class="block w-12 h-1 bg-[#fbb03b] mt-2"></span>
                            </h3>
                            <a href="@Url.Action("ShopByCategory", "Home", new { area = "Customer", category = "womens-fashion" })"
                               class="inline-flex items-center space-x-3 text-[#d4145a] hover:text-[#b3104a] transition-colors duration-300 group/link relative z-10">
                                <span class="text-lg font-semibold border-b-2 border-transparent hover:border-[#fbb03b] transition-all">
                                    Explore Collection
                                </span>
                                <svg class="w-6 h-6 transform group-hover/link:translate-x-2 transition-transform duration-300"
                                     fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
                                </svg>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
        <!-- popular categories Section -->
    <section id="popular-categories" class="px-4 sm:px-6 lg:px-8 pt-4 pb-20 bg-white max-w-7xl mx-auto">
        <div class="max-w-7xl mx-auto">
            <div class="flex items-center justify-between mb-12">
                <h2 class="text-3xl md:text-4xl font-bold">
                    Popular <span class="text-[#088178]">Categories</span>
                </h2>
                <div class="flex space-x-4 navigation-buttons">
                    <button id="prevCategory" class="w-10 h-10 flex items-center justify-center rounded-full bg-[#088178] hover:bg-[#066156] text-white hover:text-white transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed" aria-label="Previous Category">
                        <i class="fas fa-chevron-left"></i>
                    </button>
                    <button id="nextCategory" class="w-10 h-10 flex items-center justify-center rounded-full bg-[#088178] hover:bg-[#066156] text-white hover:text-white transition-all duration-300" aria-label="Next Category">
                        <i class="fas fa-chevron-right"></i>
                    </button>
                </div>
            </div>
            <div class="relative overflow-hidden">
                <div id="categoriesWrapper" class="w-full overflow-hidden mx-auto">
                    <div id="categoriesContainer" class="flex items-start flex-nowrap gap-6" data-categories='@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Categories ?? new List<object>()))'>
                        <!-- Cards generated by JavaScript -->
                    </div>
                </div>
            </div>
        </div>
    </section>
   

    <!-- Premium Banners Section -->
    <section class="px-4 sm:px-6 lg:px-8 py-16 max-w-7xl mx-auto space-y-20">
        <div class="text-center mb-16">
            <h2 class="text-4xl font-bold text-gray-900 mb-4 relative inline-block">
                <span class="bg-clip-text text-transparent bg-gradient-to-r from-[#088178] to-[#04a696]">
                    Discover the Latest in Fashion
                </span>
                <div class="absolute -bottom-2 left-1/2 transform -translate-x-1/2 w-24 h-1 bg-gradient-to-r from-[#088178] to-[#04a696]"></div>
            </h2>
            <p class="text-lg text-gray-600 max-w-2xl mx-auto">  Dive into exclusive deals, seasonal collections, and fresh arrivals tailored to elevate your style.</p>
        </div>
        <!-- Main Banners Grid -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 lg:gap-8">
            <!-- Banner 1: Buy 1 Get 1 Free -->
            <div class="scroll-animate relative overflow-hidden rounded-[1.5rem] h-[480px] group isolate">
                <div class="absolute inset-0 bg-[url('https://images.unsplash.com/photo-1539109136881-3be0616acf4b')] bg-cover bg-center transition-transform duration-700 group-hover:scale-105"></div>
                <div class="absolute inset-0 bg-gradient-to-br from-[#088178]/70 to-[#04a696]/60 backdrop-blur-[2px]"></div>
                <div class="relative z-10 p-8 h-full flex flex-col justify-center space-y-5">
                    <span class="animated-element text-sm font-semibold uppercase tracking-widest mb-2 text-white">
                        Limited Time Offer
                    </span>
                    <h2 class="animated-element text-4xl lg:text-5xl font-bold mb-4 leading-tight text-white">
                        Buy 1<br>Get 1 Free
                    </h2>
                    <p class="animated-element text-lg mb-6 text-gray-100">
                        Classic dresses at unprecedented prices
                    </p>
                    <a href="#" class="animated-element inline-flex items-center space-x-3 bg-white/90 hover:bg-white text-[#088178] font-semibold py-3.5 px-7 rounded-xl transition-all duration-300 shadow-xl hover:shadow-2xl hover:scale-[1.02]">
                        <span>Claim Offer</span>
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
                        </svg>
                    </a>
                </div>

            </div>

            <!-- Banner 2: Spring Collection -->
            <div class="scroll-animate relative overflow-hidden rounded-[1.5rem] h-[480px] group isolate">
                <div class="absolute inset-0 bg-[url('https://images.unsplash.com/photo-1526047932273-341f2a7631f9')] bg-cover bg-center transition-transform duration-700 group-hover:scale-105"></div>
                <div class="absolute inset-0 bg-gradient-to-br from-[#d4145a]/60 to-[#fbb03b]/50 backdrop-blur-[2px]"></div>
                <div class="relative z-10 p-8 h-full flex flex-col justify-center space-y-5 text-white">
                    <span class="animated-element text-sm font-semibold uppercase tracking-widest mb-2">
                        Seasonal Must-Haves
                    </span>
                    <h2 class="animated-element text-4xl lg:text-5xl font-bold mb-4 leading-tight text-white">
                        Spring Florals
                    </h2>
                    <p class="animated-element text-lg mb-6 text-gray-100">
                        Fresh patterns for sunny adventures
                    </p>
                    <a href="#" class="animated-element inline-flex items-center space-x-3 bg-white/90 hover:bg-white text-[#d4145a] font-semibold py-3.5 px-7 rounded-xl transition-all duration-300 shadow-xl hover:shadow-2xl hover:scale-[1.02]">
                        <span>Explore Collection</span>
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
                        </svg>
                    </a>
                </div>
            </div>

            <!-- Banner 3: New Arrivals -->
            <div class="scroll-animate relative overflow-hidden rounded-[1.5rem] h-[480px] group isolate">
                <div class="absolute inset-0 bg-[url('https://images.unsplash.com/photo-1551232864-3f0890e580d9')] bg-cover bg-center transition-transform duration-700 group-hover:scale-105"></div>
                <div class="absolute inset-0 bg-gradient-to-br from-[#2d3436]/70 to-[#636e72]/60 backdrop-blur-[2px]"></div>
                <div class="relative z-10 p-8 h-full flex flex-col justify-center text-right space-y-5 text-white">
                    <span class="animated-element text-sm font-semibold uppercase tracking-widest mb-2">
                        Just Released
                    </span>
                    <h2 class="animated-element text-4xl lg:text-5xl font-bold mb-4 leading-tight text-white">
                        New Arrivals
                    </h2>
                    <p class="animated-element text-lg mb-6 text-gray-100">
                        Cutting-edge styles for 2023
                    </p>
                    <a href="#" class="animated-element inline-flex items-center space-x-3 bg-white/90 hover:bg-white text-[#2d3436] font-semibold py-3.5 px-7 rounded-xl transition-all duration-300 shadow-xl hover:shadow-2xl hover:scale-[1.02] ml-auto">
                        <span>Discover Now</span>
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
                        </svg>
                    </a>
                </div>
            </div>
        </div>

        <!-- Curated Collections Grid -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 lg:gap-8">
            <!-- Seasonal Sale -->
            <div class="scroll-animate relative overflow-hidden rounded-[1.5rem] h-96 group isolate">
                <div class="absolute inset-0 bg-[url('https://images.unsplash.com/photo-1600185365483-26d7a4cc7519')] bg-cover bg-center transition-transform duration-700 group-hover:scale-110"></div>
                <div class="absolute inset-0 bg-gradient-to-t from-[#088178]/90 to-transparent"></div>
                <div class="relative z-10 p-8 h-full flex flex-col justify-end">
                    <div class="space-y-3">
                        <h2 class="animated-element text-2xl font-bold uppercase tracking-widest text-[#9F6650]">
                            Winter Clearance
                        </h2>
                        <h3 class="animated-element text-4xl font-bold leading-tight text-white">
                            50% Off Cozy Styles
                        </h3>
                    </div>

                    <div class="animated-element absolute top-6 right-6 w-14 h-14 bg-white/10 backdrop-blur-sm rounded-xl flex items-center justify-center">
                        <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                        </svg>
                    </div>
                </div>
            </div>

            <!-- Footwear Collection -->
            <div class="scroll-animate relative overflow-hidden rounded-[1.5rem] h-96 group isolate">
                <div class="absolute inset-0 bg-[url('https://images.unsplash.com/photo-1460353581641-37baddab0fa2')] bg-cover bg-center transition-transform duration-700 group-hover:scale-110"></div>
                <div class="absolute inset-0 bg-gradient-to-t from-[#d4145a]/90 to-transparent"></div>
                <div class="relative z-10 p-8 h-full flex flex-col justify-end">
                    <div class="space-y-3">
                        <h2 class="animated-element text-2xl font-bold uppercase tracking-widest text-black-500">
                            New Season
                        </h2>
                        <h3 class="animated-element text-4xl font-bold leading-tight text-white">
                            Fresh Footwear
                        </h3>
                    </div>

                    <div class="animated-element absolute top-6 right-6 w-14 h-14 bg-white/10 backdrop-blur-sm rounded-xl flex items-center justify-center">
                        <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                        </svg>
                    </div>
                </div>
            </div>

            <!-- Graphic Tees -->
            <div class="scroll-animate relative overflow-hidden rounded-[1.5rem] h-96 group isolate">
                <div class="absolute inset-0 bg-[url('https://images.unsplash.com/photo-1576566588028-4147f3842f27')] bg-cover bg-center transition-transform duration-700 group-hover:scale-110"></div>
                <div class="absolute inset-0 bg-gradient-to-t from-[#2d3436]/90 to-transparent"></div>
                <div class="relative z-10 p-8 h-full flex flex-col justify-end">
                    <div class="space-y-3">
                        <h2 class="animated-element text-2xl font-bold uppercase tracking-widest text-[#BDB2AB]">
                            Streetwear
                        </h2>
                        <h3 class="animated-element text-4xl font-bold leading-tight text-white">
                            Graphic Tees
                        </h3>
                    </div>

                    <div class="animated-element absolute top-6 right-6 w-14 h-14 bg-white/10 backdrop-blur-sm rounded-xl flex items-center justify-center">
                        <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                        </svg>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section id="newsletter" class="px-6 sm:px-8 lg:px-12 py-12 bg-[#c1e3d6] rounded-2xl relative overflow-hidden">
        <div class="absolute inset-0 bg-[url('data:image/svg+xml;utf8,<svg width=" 100" height="100" transform="rotate(25)" opacity="0.2" version="1.1" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"><circle cx="50" cy="50" r="40" fill="%23088178" /></svg></div>

        <div class="max-w-7xl mx-auto flex flex-col lg:flex-row justify-between items-center gap-8 lg:gap-12 relative z-10">
            <div class="newsletter-content flex items-center gap-6 group cursor-pointer">
                <div class="icon-container w-16 h-16 rounded-xl bg-white/30 backdrop-blur-md flex items-center justify-center shadow-sm hover:shadow-md hover:bg-white/40 transition-all">
                    <i class="fas fa-envelope-open-text text-2xl text-[#1B201E] opacity-90"></i>
                </div>
                <div class="text-content space-y-1">
                    <h3 class="text-2xl lg:text-3xl font-bold text-[#1B201E] leading-tight">
                        Style Updates & Offers
                        <span class="block text-[#088178] mt-1">20% First Order</span>
                    </h3>
                    <p class="text-[#1B201E]/90 font-medium text-sm lg:text-base">
                        Get exclusive access to new arrivals and special promotions
                    </p>
                </div>
            </div>

            <form class="subscription-form w-full lg:w-[480px] flex flex-col sm:flex-row gap-3 items-center">
                <div class="email-input-wrapper relative w-full group">
                    <input type="email"
                           placeholder="Enter your email"
                           class="w-full h-12 px-5 pr-12 text-[#1B201E] bg-white/90 backdrop-blur-sm rounded-full border-2 border-transparent focus:border-[#088178]/50 focus:ring-0 transition-all"
                           required>
                    <i class="fas fa-paper-plane text-[#088178] absolute right-4 top-1/2 -translate-y-1/2 transition-transform duration-300"></i>
                </div>
                <button type="submit"
                        class="subscribe-btn h-12 px-8 bg-[#088178] hover:bg-[#066156] text-white font-medium rounded-full transition-all transform hover:scale-[1.02] active:scale-95 flex items-center gap-2">
                    Subscribe Now
                    <i class="fas fa-arrow-right text-sm opacity-0 group-hover/subscribe:opacity-100 group-hover/subscribe:translate-x-1 transition-all"></i>
                </button>
            </form>
        </div>
    </section>

<!-- Back to Top Button -->
<button class="back-to-top" title="Go to top">
    <i class="fas fa-arrow-up"></i>
</button>
</div>


<script>
        // Notification System
        function showNotification(isSuccess, message) {
            const notificationContainer = document.querySelector('.notification-container');
            const notificationId = 'notification-' + Date.now();
            const notificationClass = isSuccess ? 'success' : 'error';
            const iconClass = isSuccess ? 'fa-check-circle' : 'fa-exclamation-circle';
            const duration = isSuccess ? 3000 : 5000;

            const notificationHTML = `
                <div id="${notificationId}" class="notification ${notificationClass}">
                    <i class="fas ${iconClass} notification-icon"></i>
                    <span>${message}</span>
                    <span class="notification-close" onclick="hideNotification('${notificationId}')">
                        <i class="fas fa-times"></i>
                    </span>
                    <div class="notification-progress">
                        <div class="notification-progress-bar"></div>
                    </div>
                </div>
            `;

            notificationContainer.insertAdjacentHTML('afterbegin', notificationHTML);
            const notification = document.getElementById(notificationId);
            const progressBar = notification.querySelector('.notification-progress-bar');

            setTimeout(() => {
                notification.classList.add('show');
                positionNotifications();
            }, 100);

            setTimeout(() => {
                hideNotification(notificationId);
            }, duration);

            notification.addEventListener('mouseenter', () => {
                progressBar.style.animationPlayState = 'paused';
            });

            notification.addEventListener('mouseleave', () => {
                progressBar.style.animationPlayState = 'running';
            });
        }

        function positionNotifications() {
            const notifications = document.querySelectorAll('.notification.show');
            notifications.forEach((notification, index) => {
                notification.style.top = `${index * (notification.offsetHeight + 10)}px`;
            });
        }

        window.hideNotification = function(id) {
            const notification = document.getElementById(id);
            if (notification) {
                notification.classList.remove('show');
                notification.classList.add('hide');
                setTimeout(() => notification.remove(), 500);
            }
        };

        // Size and Quantity Modal
        let currentProductId = null;
        let selectedSize = null;
        let maxQuantity = 10;

        function showSizeModal(productId) {
            currentProductId = productId;
            selectedSize = null;
            document.getElementById('quantityInput').value = 1;
            document.getElementById('confirmAddToCart').disabled = true;
            document.getElementById('stockInfo').textContent = '';

            const sizeOptionsContainer = document.getElementById('sizeOptionsContainer');
            sizeOptionsContainer.innerHTML = '<p>Loading sizes...</p>';

            document.getElementById('sizeModal').classList.add('active');

            fetch(`/Customer/Home/GetProductSizes?productId=${productId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        updateSizeOptions(data.sizes);
                    } else {
                        sizeOptionsContainer.innerHTML = `<p>${data.message || 'No sizes available'}</p>`;
                    }
                })
                .catch(error => {
                    sizeOptionsContainer.innerHTML = '<p>Error loading sizes</p>';
                    console.error('Error:', error);
                });
        }

     function updateSizeOptions(availableSizes) {
            const sizeOptionsContainer = document.getElementById('sizeOptionsContainer');
            sizeOptionsContainer.innerHTML = '';

            if (!availableSizes || availableSizes.length === 0) {
                sizeOptionsContainer.innerHTML = '<p>Currently out of stock</p>';
                return;
            }

            const allSizes = ['S', 'M', 'L', 'XL', 'XXL', 'XXXL'];
            const topRow = allSizes.slice(0, 3);
            const bottomRow = allSizes.slice(3, 6);

            const createSizeOption = (size, isAvailable) => {
                const sizeOption = document.createElement('div');
                sizeOption.className = `size-option ${isAvailable ? '' : 'disabled'}`;
                sizeOption.textContent = size;
                sizeOption.dataset.size = size;

                if (isAvailable) {
                    sizeOption.addEventListener('click', function() {
                        document.querySelectorAll('.size-option').forEach(opt => opt.classList.remove('active'));
                        this.classList.add('active');
                        selectedSize = this.dataset.size;
                        document.getElementById('confirmAddToCart').disabled = false;
                        maxQuantity = 10;
                        document.getElementById('quantityInput').max = maxQuantity;
                        document.getElementById('stockInfo').textContent = `Max ${maxQuantity} available`;
                    });
                }

                return sizeOption;
            };

            const topRowDiv = document.createElement('div');
            topRowDiv.className = 'size-row';
            topRow.forEach(size => {
                const isAvailable = availableSizes.includes(size);
                topRowDiv.appendChild(createSizeOption(size, isAvailable));
            });

            const bottomRowDiv = document.createElement('div');
            bottomRowDiv.className = 'size-row';
            bottomRow.forEach(size => {
                const isAvailable = availableSizes.includes(size);
                bottomRowDiv.appendChild(createSizeOption(size, isAvailable));
            });

            sizeOptionsContainer.appendChild(topRowDiv);
            sizeOptionsContainer.appendChild(bottomRowDiv);
        }

        function hideSizeModal() {
            document.getElementById('sizeModal').classList.remove('active');
        }

        document.getElementById('incrementQty').addEventListener('click', function() {
            const quantityInput = document.getElementById('quantityInput');
            let currentValue = parseInt(quantityInput.value);
            if (currentValue < maxQuantity) {
                quantityInput.value = currentValue + 1;
            }
        });

        document.getElementById('decrementQty').addEventListener('click', function() {
            const quantityInput = document.getElementById('quantityInput');
            let currentValue = parseInt(quantityInput.value);
            if (currentValue > 1) {
                quantityInput.value = currentValue - 1;
            }
        });

        document.getElementById('quantityInput').addEventListener('change', function() {
            let value = parseInt(this.value);
            if (isNaN(value) || value < 1) {
                this.value = 1;
            } else if (value > maxQuantity) {
                this.value = maxQuantity;
            }
        });

        document.getElementById('confirmAddToCart').addEventListener('click', function() {
            if (currentProductId && selectedSize) {
                const quantity = parseInt(document.getElementById('quantityInput').value) || 1;
                document.getElementById(`size-${currentProductId}`).value = selectedSize;
                document.getElementById(`quantity-${currentProductId}`).value = quantity;

                const form = document.querySelector(`.add-to-cart-form[data-product-id="${currentProductId}"]`);
                const formData = new FormData(form);

                hideSizeModal();

                fetch('@Url.Action("AddToCart", "Cart", new { area = "Customer" })', {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    showNotification(data.success, data.message || (data.success ? "Item added to cart" : "Failed to add item"));
                    if (data.success) {
                        const cartButton = document.querySelector(`.pro-cart-button[onclick*="${currentProductId}"]`);
                        if (cartButton) {
                            cartButton.classList.add('bounce-effect');
                            setTimeout(() => cartButton.classList.remove('bounce-effect'), 1000);
                        }
                        if (data.cartCount !== undefined) {
                            updateCartCount(data.cartCount);
                        }
                    }
                })
                .catch(error => {
                    showNotification(false, "You must log in to add items to cart");
                });
            }
        });

        function updateCartCount(count) {
            const cartCountElement = document.querySelector('.cart-count');
            if (cartCountElement) {
                cartCountElement.textContent = count;
                cartCountElement.style.display = count > 0 ? 'inline-block' : 'none';
            }
        }

        document.getElementById('sizeModal').addEventListener('click', function(e) {
            if (e.target === this) {
                hideSizeModal();
            }
        });

        // Quick View Modal
        let selectedQuickViewSize = null;

        function showQuickViewModal(productId) {
            fetch(`/Customer/Home/GetProductDetails?productId=${productId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const product = data.product;
                        document.getElementById('quickViewProductName').textContent = product.productName || 'Product Name';
                        document.getElementById('quickViewProductImage').src = product.imgUrl || 'https://via.placeholder.com/300';
                        document.getElementById('quickViewPrice').textContent = `$${parseFloat(product.productPrice || 0).toFixed(2)}`;
                        document.getElementById('quickViewDescription').textContent = product.description || 'No description available';

                        const ratingContainer = document.getElementById('quickViewRating');
                        const rating = product.productRating || 0;
                        ratingContainer.innerHTML = Array(5).fill().map((_, i) =>
                            i < rating ? '<i class="fas fa-star"></i>' : '<i class="far fa-star"></i>'
                        ).join('');

                        const quantityInput = document.getElementById('quickViewQuantityInput');
                        quantityInput.value = 1;

                        const sizes = product.availableSizes || ['S', 'M', 'L'];
                        const sizeContainer = document.getElementById('quickViewSizes');
                        sizeContainer.innerHTML = sizes.map(size => `
                            <div class="size-option" data-size="${size}">${size}</div>
                        `).join('');
                        const firstSizeOption = sizeContainer.querySelector('.size-option');
                        if (firstSizeOption) {
                            firstSizeOption.classList.add('selected');
                            selectedQuickViewSize = firstSizeOption.dataset.size;
                        }

                        document.querySelectorAll('#quickViewSizes .size-option').forEach(option => {
                            option.addEventListener('click', function() {
                                document.querySelectorAll('#quickViewSizes .size-option').forEach(opt => opt.classList.remove('selected'));
                                this.classList.add('selected');
                                selectedQuickViewSize = this.dataset.size;
                            });
                        });

                        const incrementBtn = document.getElementById('quickViewIncrementQty');
                        const decrementBtn = document.getElementById('quickViewDecrementQty');
                        const newIncrementBtn = incrementBtn.cloneNode(true);
                        const newDecrementBtn = decrementBtn.cloneNode(true);
                        incrementBtn.parentNode.replaceChild(newIncrementBtn, incrementBtn);
                        decrementBtn.parentNode.replaceChild(newDecrementBtn, decrementBtn);

                        newIncrementBtn.addEventListener('click', function() {
                            let currentValue = parseInt(quantityInput.value);
                            if (currentValue < 10) {
                                quantityInput.value = currentValue + 1;
                            }
                        });

                        newDecrementBtn.addEventListener('click', function() {
                            let currentValue = parseInt(quantityInput.value);
                            if (currentValue > 1) {
                                quantityInput.value = currentValue - 1;
                            }
                        });

                        document.getElementById('quickViewAddToCart').onclick = () => addToCartFromQuickView(productId);

                        document.getElementById('quickViewModal').classList.add('active');
                    } else {
                        showNotification(false, 'Failed to load product details: ' + data.message);
                    }
                })
                .catch(error => {
                    showNotification(false, 'Error loading product details');
                    console.error('Fetch error:', error);
                });
        }

        function hideQuickViewModal() {
            document.getElementById('quickViewModal').classList.remove('active');
        }

        function addToCartFromQuickView(productId) {
            if (!selectedQuickViewSize) {
                showNotification(false, "Please select a size");
                return;
            }

            const quantity = parseInt(document.getElementById('quickViewQuantityInput').value) || 1;
            const form = document.querySelector(`.add-to-cart-form[data-product-id="${productId}"]`);

            if (!form) {
                showNotification(false, "Error: Product form not found");
                return;
            }

            const formData = new FormData(form);
            formData.set('size', selectedQuickViewSize);
            formData.set('quantity', quantity);

            fetch('@Url.Action("AddToCart", "Cart", new { area = "Customer" })', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                showNotification(data.success, data.message || (data.success ? "Item added to cart" : "Product not found or failed to add item"));
                if (data.success) {
                    const cartButton = document.querySelector(`.pro-cart-button[onclick*="${productId}"]`);
                    if (cartButton) {
                        cartButton.classList.add('bounce-effect');
                        setTimeout(() => cartButton.classList.remove('bounce-effect'), 1000);
                    }
                    if (data.cartCount !== undefined) {
                        updateCartCount(data.cartCount);
                    }
                    hideQuickViewModal();
                }
            })
            .catch(error => {
                showNotification(false, "You must log in to add items to cart");
                console.error('Error adding to cart:', error);
            });
        }
        // Back to Top Button Functionality
document.addEventListener('DOMContentLoaded', function () {
    const backToTopButton = document.querySelector('.back-to-top');

    // Show/hide button based on scroll position
    window.addEventListener('scroll', function () {
        if (window.scrollY > 300) { // Show button after scrolling 300px
            backToTopButton.classList.add('visible');
        } else {
            backToTopButton.classList.remove('visible');
        }
    });

    // Smooth scroll to top when button is clicked
    backToTopButton.addEventListener('click', function () {
        window.scrollTo({
            top: 0,
            behavior: 'smooth'
        });
    });
});
    // Filter function
    document.addEventListener('DOMContentLoaded', function() {
        document.querySelectorAll('.filter-btn').forEach(button => {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                const categoryId = this.dataset.categoryId || '';
                document.querySelectorAll('.filter-btn').forEach(btn => btn.classList.remove('active'));
                this.classList.add('active');
                loadProducts(categoryId);
            });
        });

        function loadProducts(categoryId) {
            fetch(`/Customer/Home?categoryId=${categoryId}`, {
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => response.json())
            .then(data => {
                updateProductContainer(data.products);
            })
            .catch(error => {
                console.error('Error fetching products:', error);
                showNotification(false, 'Failed to load products');
            });
        }

        function updateProductContainer(products) {
            const productContainer = document.getElementById('productContainer');
            productContainer.innerHTML = '';

            if (products && products.length > 0) {
                products.forEach(product => {
                    const productId = product.product_Id || 0;
                    const productName = product.product_Name || 'Unnamed Product';
                    const brandName = product.brandName || 'Unknown';
                    const price = product.product_Price ? Number(product.product_Price).toFixed(2) : '0.00';
                    const rating = product.product_Rating || 0;
                    const imgUrl = product.imgUrl || '/img/placeholder.jpg';
                    const isFeatured = product.isFeatured || false;

                    const productHtml = `
                        <div class="pro group cursor-pointer relative">
                            <div class="relative overflow-hidden rounded-2xl">
                                <img src="${imgUrl}" alt="${productName}" class="product-img w-full h-auto object-cover transition-transform duration-700 group-hover:scale-110">
                                ${isFeatured ? `
                                    <span class="absolute top-2 left-2 bg-[#088178] text-white text-xs font-bold px-2 py-1 rounded-full shadow-sm">
                                        FEATURED
                                    </span>
                                ` : ''}
                                <div class="icon-overlay">
                                    <button onclick="event.stopPropagation(); showQuickViewModal(${productId});">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="des p-4">
                                <span class="product-brand">${brandName}</span>
                                <h5 class="product-description">${productName}</h5>
                                <div class="star">
                                    ${Array(rating).fill('<i class="fas fa-star"></i>').join('')}
                                    ${Array(5 - rating).fill('<i class="far fa-star"></i>').join('')}
                                </div>
                                <h4 class="product-price">$${price}</h4>
                            </div>
                            <div class="pro-cart-button absolute bottom-4 right-4" onclick="event.stopPropagation(); showSizeModal(${productId})">
                                <i class="fas fa-shopping-cart text-[#088178]"></i>
                            </div>
                            <form class="add-to-cart-form" data-product-id="${productId}" style="display: none;">
                                <input type="hidden" name="__RequestVerificationToken" value="${document.querySelector('input[name="__RequestVerificationToken"]').value || ''}" />
                                <input type="hidden" name="productId" value="${productId}" />
                                <input type="hidden" name="quantity" id="quantity-${productId}" value="1" />
                                <input type="hidden" name="size" id="size-${productId}" value="" />
                            </form>
                        </div>
                    `;
                    productContainer.insertAdjacentHTML('beforeend', productHtml);
                });
            } else {
                productContainer.innerHTML = `
                    <div class="w-full flex flex-col items-center justify-center py-12 px-4">
                        <div class="text-center max-w-md mx-auto">
                            <div class="mb-6">
                                <i class="fas fa-star text-gray-300 text-5xl animate-pulse"></i>
                            </div>
                            <h3 class="text-2xl font-semibold text-gray-800 mb-3">No Products Found</h3>
                            <p class="text-gray-600 mb-6 leading-relaxed">
                                No products match your selection. Explore our full collection to find your style!
                            </p>
                            <div class="mt-6">
                                <a href="/Customer/Home/Shop"
                                   class="inline-flex items-center px-6 py-3 bg-primary text-white rounded-lg hover:bg-primary-dark transition-all duration-300 transform hover:scale-105 shadow-md">
                                    <i class="fas fa-store mr-3"></i>
                                    <span class="font-medium">Explore All Products</span>
                                </a>
                            </div>
                        </div>
                    </div>
                `;
            }

            // Re-attach cart button event listeners
            document.querySelectorAll('.pro-cart-button').forEach(button => {
                button.addEventListener('click', function(e) {
                    e.stopPropagation();
                    const productId = this.getAttribute('onclick').match(/\d+/)[0];
                    showSizeModal(productId);
                });
            });

            // Re-attach product click event listeners
            document.querySelectorAll('.pro').forEach(pro => {
                pro.addEventListener('click', (e) => {
                    if (!e.target.closest('.pro-cart-button') && !e.target.closest('.icon-overlay')) {
                        const productId = pro.querySelector('.add-to-cart-form').dataset.productId;
                        window.location.href = `/Customer/Home/Details/${productId}`;
                    }
                });
            });
        }
    });
        // New Arrivals Slider
        document.addEventListener('DOMContentLoaded', function() {
            const productsContainer = document.getElementById('productsContainer');
            const prevButton = document.getElementById('prevProduct');
            const nextButton = document.getElementById('nextProduct');
            let products;

            try {
                products = JSON.parse(productsContainer.dataset.products || '[]');
            } catch (e) {
                console.error('JSON Parse Error:', e);
                productsContainer.innerHTML = '<p class="text-center text-gray-500">Error loading products.</p>';
                products = [];
                return;
            }

            let currentStartIndex = 0;
            let interval;
            let isTransitioning = false;
            let isDragging = false;
            let startX = 0;
            let currentTranslate = 0;
            let prevTranslate = 0;

            productsContainer.style.willChange = 'transform';
            productsContainer.style.backfaceVisibility = 'hidden';
            productsContainer.style.transition = 'transform 0.8s ease-in-out';

            function getCardWidth() {
                const screenWidth = window.innerWidth;
                if (screenWidth <= 480) return Math.min(document.querySelector('#productsWrapper').offsetWidth - 16, 250 + 8);
                if (screenWidth <= 768) return 180 + 16;
                if (screenWidth <= 1280) return 220 + 16;
                return 250 + 16;
            }

            function createProductCard(product) {
                const card = document.createElement('div');
                card.className = 'pro group cursor-pointer relative';
                const cardWidth = getCardWidth() - 16;
                card.style.width = `${cardWidth}px`;

                const productId = product.product_Id || 0;
                const productName = product.product_Name || 'Unnamed Product';
                const brandName = product.brandName || 'Unknown Brand';
                const price = product.product_Price ? Number(product.product_Price).toFixed(2) : '0.00';
                const rating = product.product_Rating || 0;
                const imgUrl = product.imgUrl || '/img/placeholder.jpg';

                card.innerHTML = `
                    <div class="relative overflow-hidden rounded-2xl">
                        <img src="${imgUrl}" alt="${productName}" class="product-img w-full h-auto object-cover transition-transform duration-700 group-hover:scale-110">
                        <span class="absolute top-2 left-2 bg-[#FF6B6B] text-white text-xs font-bold px-2 py-1 rounded-full shadow-sm">NEW</span>
                        <div class="icon-overlay">
                            <button onclick="event.stopPropagation(); showQuickViewModal(${productId});">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                    </div>
                    <div class="des p-3">
                        <span class="product-brand text-sm">${brandName}</span>
                        <h5 class="product-description text-base font-medium">${productName}</h5>
                        <div class="star flex items-center">
                            ${'<i class="fas fa-star text-yellow-400 text-xs"></i>'.repeat(rating)}
                            ${'<i class="far fa-star text-yellow-400 text-xs"></i>'.repeat(5 - rating)}
                        </div>
                        <h4 class="product-price text-lg font-semibold">$${price}</h4>
                    </div>
                    <div class="pro-cart-button absolute bottom-3 right-3" onclick="event.stopPropagation(); showSizeModal(${productId})">
                        <i class="fas fa-shopping-cart text-[#088178]"></i>
                    </div>
                    <form class="add-to-cart-form" data-product-id="${productId}" style="display: none;">
                        <input type="hidden" name="__RequestVerificationToken" value="${document.querySelector('input[name="__RequestVerificationToken"]').value || ''}" />
                        <input type="hidden" name="productId" value="${productId}" />
                        <input type="hidden" name="quantity" id="quantity-${productId}" value="1" />
                        <input type="hidden" name="size" id="size-${productId}" value="" />
                    </form>
                `;
                card.addEventListener('click', (e) => {
                    if (!e.target.closest('.pro-cart-button') && !e.target.closest('.icon-overlay')) {
                        window.location.href = `/Customer/Home/Details/${productId}`;
                    }
                });
                return card;
            }

            productsContainer.innerHTML = '';
            if (products.length) {
                for (let i = 0; i < products.length * 3; i++) {
                    const idx = i % products.length;
                    const card = createProductCard(products[idx]);
                    productsContainer.appendChild(card);
                }
            } else {
                productsContainer.innerHTML = '<p class="text-center text-gray-500">No new arrivals available.</p>';
            }

            const cardWidth = getCardWidth();
            currentTranslate = -cardWidth * products.length;
            prevTranslate = currentTranslate;
            if (products.length) {
                productsContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
            }

            function updateSliderPosition(direction = 'next') {
                if (isTransitioning || !products.length) return;
                isTransitioning = true;
                const cardWidth = getCardWidth();
                if (direction === 'next') {
                    currentStartIndex = (currentStartIndex + 1) % products.length;
                    currentTranslate -= cardWidth;
                } else {
                    currentStartIndex = (currentStartIndex - 1 + products.length) % products.length;
                    currentTranslate += cardWidth;
                }
                productsContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
                setTimeout(() => {
                    const limit = cardWidth * products.length * 2;
                    if (Math.abs(currentTranslate) >= limit || currentTranslate >= 0) {
                        currentTranslate = -cardWidth * products.length;
                        productsContainer.style.transition = 'none';
                        productsContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
                        setTimeout(() => {
                            productsContainer.style.transition = 'transform 0.8s ease-in-out';
                        }, 50);
                    }
                    isTransitioning = false;
                }, 800);
            }

            function cycleCards(direction = 'next') {
                updateSliderPosition(direction);
            }

            if (products.length) {
                interval = setInterval(() => cycleCards('next'), 3500);
            }

            nextButton.addEventListener('click', () => {
                if (isTransitioning || !products.length) return;
                clearInterval(interval);
                cycleCards('next');
                interval = setInterval(() => cycleCards('next'), 3500);
            });

            prevButton.addEventListener('click', () => {
                if (isTransitioning || !products.length) return;
                clearInterval(interval);
                cycleCards('prev');
                interval = setInterval(() => cycleCards('next'), 3500);
            });

            productsContainer.addEventListener('mouseenter', () => clearInterval(interval));
            productsContainer.addEventListener('mouseleave', () => {
                if (!isDragging && products.length) {
                    interval = setInterval(() => cycleCards('next'), 3500);
                }
            });

            let animationFrameId;
            function startDrag(e) {
                if (!products.length) return;
                isDragging = true;
                startX = (e.type === 'touchstart' ? e.touches[0].pageX : e.pageX) - currentTranslate;
                productsContainer.style.cursor = 'grabbing';
                clearInterval(interval);
                cancelAnimationFrame(animationFrameId);
            }

            function moveDrag(e) {
                if (!isDragging) return;
                e.preventDefault();
                cancelAnimationFrame(animationFrameId);
                animationFrameId = requestAnimationFrame(() => {
                    const x = (e.type === 'touchmove' ? e.touches[0].pageX : e.pageX) - startX;
                    currentTranslate = x;
                    productsContainer.style.transition = 'none';
                    productsContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
                });
            }

            function endDrag() {
                if (!isDragging) return;
                isDragging = false;
                productsContainer.style.cursor = 'pointer';
                productsContainer.style.transition = 'transform 0.5s ease-in-out';
                const cardWidth = getCardWidth();
                const threshold = cardWidth / 2;
                const draggedDistance = currentTranslate - prevTranslate;
                if (Math.abs(draggedDistance) > threshold) {
                    cycleCards(draggedDistance < 0 ? 'next' : 'prev');
                } else {
                    productsContainer.style.transform = `translate3d(${prevTranslate}px, 0, 0)`;
                    isTransitioning = false;
                }
                prevTranslate = currentTranslate;
                if (products.length) {
                    interval = setInterval(() => cycleCards('next'), 3500);
                }
            }

            productsContainer.addEventListener('mousedown', startDrag);
            productsContainer.addEventListener('mousemove', moveDrag);
            productsContainer.addEventListener('mouseup', endDrag);
            productsContainer.addEventListener('mouseleave', endDrag);
            productsContainer.addEventListener('touchstart', startDrag);
            productsContainer.addEventListener('touchmove', moveDrag);
            productsContainer.addEventListener('touchend', endDrag);
            productsContainer.addEventListener('selectstart', (e) => e.preventDefault());

            window.addEventListener('resize', () => {
                if (!products.length) return;
                const cardWidth = getCardWidth();
                currentTranslate = -cardWidth * products.length;
                prevTranslate = currentTranslate;
                productsContainer.style.transition = 'none';
                productsContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
                Array.from(productsContainer.children).forEach(card => {
                    card.style.width = `${cardWidth - 16}px`;
                });
                setTimeout(() => {
                    productsContainer.style.transition = 'transform 0.8s ease-in-out';
                }, 50);
            });

            // Initialize cart button event listeners
            document.querySelectorAll('.pro-cart-button').forEach(button => {
                button.addEventListener('click', function(e) {
                    e.stopPropagation();
                    const productId = this.getAttribute('onclick').match(/\d+/)[0];
                    showSizeModal(productId);
                });
            });

            // Show initial notifications
    @if (showSuccessMessage)
    {
        @:showNotification(true, "Item added to cart successfully!");
    }
    @if (showErrorMessage)
    {
        @:showNotification(false, "@errorMessage");
    }
        });
 // Popular Brands Slider
        document.addEventListener('DOMContentLoaded', function () {
            const brandsContainer = document.getElementById('brandsContainer');
            const prevButton = document.getElementById('prevBrand');
            const nextButton = document.getElementById('nextBrand');
            let brands;

            console.log('Raw data-brands:', brandsContainer.dataset.brands);
            try {
                brands = JSON.parse(brandsContainer.dataset.brands || '[]');
                console.log('Parsed brands:', brands);
                console.log('Unique brands:', [...new Set(brands.map(b => b.Name))]);
            } catch (e) {
                console.error('JSON Parse Error:', e, 'Raw Data:', brandsContainer.dataset.brands);
                brands = [
                    { Name: "Nike", ImgUrl: "/img/brands/nike.webp", Link: "/Customer/Home/ShopByBrand?brand=nike" },
                    { Name: "Adidas", ImgUrl: "/img/brands/adidas.jpeg", Link: "/Customer/Home/ShopByBrand?brand=adidas" },
                    { Name: "Puma", ImgUrl: "/img/brands/puma.jpg", Link: "/Customer/Home/ShopByBrand?brand=puma" },
                    { Name: "Zara", ImgUrl: "/img/brands/zara.jpeg", Link: "/Customer/Home/ShopByBrand?brand=zara" },
                    { Name: "H&M", ImgUrl: "/img/brands/hm.jpg", Link: "/Customer/Home/ShopByBrand?brand=hm" },
                    { Name: "Levi's", ImgUrl: "/img/brands/levis.jpg", Link: "/Customer/Home/ShopByBrand?brand=levis" },
                    { Name: "NightBird", ImgUrl: "/img/brands/nightbird.jpg", Link: "/Customer/Home/ShopByBrand?brand=nightbird" },
                    { Name: "Local Brands", ImgUrl: "/img/brands/local.webp", Link: "/Customer/Home/ShopByBrand?brand=local" }
                ];
                console.log('Using hardcoded brands:', brands);
            }

            if (!brands.length) {
                console.warn('No brands data available.');
                brandsContainer.innerHTML = '<p class="text-center text-gray-500">No brands available.</p>';
                return;
            }

            let currentStartIndex = 0;
            let interval;
            let isTransitioning = false;
            let isDragging = false;
            let startX = 0;
            let currentTranslate = 0;
            let prevTranslate = 0;

            function isMobileView() {
                return window.innerWidth <= 768;
            }

            function getCardWidth() {
                const screenWidth = window.innerWidth;
                if (screenWidth <= 480) return isMobileView() ? 'calc(50% - 0.5rem)' : Math.min(document.querySelector('#brandsWrapper').offsetWidth - 16, 300 + 8);
                if (screenWidth <= 768) return isMobileView() ? 'calc(50% - 0.5rem)' : 140 + 16;
                if (screenWidth <= 1280) return 180 + 16;
                return 200 + 16;
            }

            function getVisibleCards() {
                const screenWidth = window.innerWidth;
                if (screenWidth <= 480) return isMobileView() ? brands.length : 1;
                if (screenWidth <= 768) return isMobileView() ? brands.length : 3.5;
                if (screenWidth <= 1280) return 5;
                return 6;
            }

            function createBrandCard(brand, isMobile = false) {
                console.log('Creating card for brand:', brand.Name, 'with link:', brand.Link);
                const card = document.createElement('div');
                card.className = 'category-card group cursor-pointer';
                card.style.willChange = isMobile ? 'auto' : 'transform';
                card.style.backfaceVisibility = isMobile ? 'visible' : 'hidden';
                if (!isMobile) {
                    card.style.width = (getCardWidth() - 16) + 'px';
                }
                card.innerHTML = `
                    <a href="${brand.Link || '#'}" class="absolute inset-0 z-10"></a>
                    <div class="relative overflow-hidden rounded-2xl">
                        <img src="${brand.ImgUrl || '/img/brands/default.jpg'}" loading="lazy" alt="${brand.Name || 'Brand'}" class="w-full h-auto object-cover transition-transform duration-700 group-hover:scale-110">
                    </div>
                    <h4 class="category-name">${brand.Name || 'Unknown Brand'}</h4>
                `;
                return card;
            }

            function initializeBrands() {
                const isMobile = isMobileView();
                brandsContainer.innerHTML = '';
                brandsContainer.style.transform = 'none';
                brandsContainer.style.transition = 'none';
                clearInterval(interval);

                if (brands.length) {
                    const uniqueBrands = [...new Map(brands.map(b => [b.Name, b])).values()];
                    if (isMobile) {
                        // Grid layout: show all brands
                        uniqueBrands.forEach(brand => {
                            const card = createBrandCard(brand, true);
                            brandsContainer.appendChild(card);
                        });
                    } else {
                        // Slider layout: triplicate for infinite scroll
                        for (let i = 0; i < uniqueBrands.length * 3; i++) {
                            const idx = i % uniqueBrands.length;
                            const card = createBrandCard(uniqueBrands[idx]);
                            brandsContainer.appendChild(card);
                        }
                        const cardWidth = getCardWidth();
                        currentTranslate = -cardWidth * uniqueBrands.length;
                        prevTranslate = currentTranslate;
                        brandsContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
                        brandsContainer.style.transition = 'transform 0.8s ease-in-out';
                        startAutoSlide();
                    }
                } else {
                    brandsContainer.innerHTML = '<p class="text-center text-gray-500">No brands available.</p>';
                }
            }

            function updateSliderPosition(direction = 'next') {
                if (isTransitioning || !brands.length || isMobileView()) return;
                isTransitioning = true;
                const cardWidth = getCardWidth();
                if (direction === 'next') {
                    currentStartIndex = (currentStartIndex + 1) % brands.length;
                    currentTranslate -= cardWidth;
                } else {
                    currentStartIndex = (currentStartIndex - 1 + brands.length) % brands.length;
                    currentTranslate += cardWidth;
                }
                brandsContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
                setTimeout(() => {
                    const limit = cardWidth * brands.length * 2;
                    if (Math.abs(currentTranslate) >= limit || currentTranslate >= 0) {
                        currentTranslate = -cardWidth * brands.length;
                        brandsContainer.style.transition = 'none';
                        brandsContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
                        setTimeout(() => {
                            brandsContainer.style.transition = 'transform 0.8s ease-in-out';
                        }, 50);
                    }
                    isTransitioning = false;
                }, 800);
            }

            function cycleCards(direction = 'next') {
                updateSliderPosition(direction);
            }

            function startAutoSlide() {
                if (brands.length && !isMobileView()) {
                    clearInterval(interval);
                    interval = setInterval(() => cycleCards('next'), 3500);
                }
            }

            // Initialize brands based on initial viewport
            initializeBrands();

            if (!isMobileView()) {
                nextButton.addEventListener('click', () => {
                    if (isTransitioning || !brands.length) return;
                    clearInterval(interval);
                    cycleCards('next');
                    startAutoSlide();
                });

                prevButton.addEventListener('click', () => {
                    if (isTransitioning || !brands.length) return;
                    clearInterval(interval);
                    cycleCards('prev');
                    startAutoSlide();
                });

                brandsContainer.addEventListener('mouseenter', () => clearInterval(interval));
                brandsContainer.addEventListener('mouseleave', () => {
                    if (!isDragging && brands.length) {
                        startAutoSlide();
                    }
                });

                let animationFrameId;
                function startDrag(e) {
                    if (!brands.length || isMobileView()) return;
                    isDragging = true;
                    startX = (e.type === 'touchstart' ? e.touches[0].pageX : e.pageX) - currentTranslate;
                    brandsContainer.style.cursor = 'grabbing';
                    clearInterval(interval);
                    cancelAnimationFrame(animationFrameId);
                }

                function moveDrag(e) {
                    if (!isDragging || isMobileView()) return;
                    e.preventDefault();
                    cancelAnimationFrame(animationFrameId);
                    animationFrameId = requestAnimationFrame(() => {
                        const x = (e.type === 'touchmove' ? e.touches[0].pageX : e.pageX) - startX;
                        currentTranslate = x;
                        brandsContainer.style.transition = 'none';
                        brandsContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
                    });
                }

                function endDrag() {
                    if (!isDragging || isMobileView()) return;
                    isDragging = false;
                    brandsContainer.style.cursor = 'pointer';
                    brandsContainer.style.transition = 'transform 0.5s ease-in-out';
                    const cardWidth = getCardWidth();
                    const threshold = cardWidth / 2;
                    const draggedDistance = currentTranslate - prevTranslate;
                    if (Math.abs(draggedDistance) > threshold) {
                        cycleCards(draggedDistance < 0 ? 'next' : 'prev');
                    } else {
                        brandsContainer.style.transform = `translate3d(${prevTranslate}px, 0, 0)`;
                        isTransitioning = false;
                    }
                    prevTranslate = currentTranslate;
                    startAutoSlide();
                }

                brandsContainer.addEventListener('mousedown', startDrag);
                brandsContainer.addEventListener('mousemove', moveDrag);
                brandsContainer.addEventListener('mouseup', endDrag);
                brandsContainer.addEventListener('mouseleave', endDrag);
                brandsContainer.addEventListener('touchstart', startDrag);
                brandsContainer.addEventListener('touchmove', moveDrag);
                brandsContainer.addEventListener('touchend', endDrag);
                brandsContainer.addEventListener('selectstart', (e) => e.preventDefault());
            }

            window.addEventListener('resize', () => {
                if (!brands.length) return;
                initializeBrands();
            });
        });
// Popular Categories Slider
document.addEventListener('DOMContentLoaded', function () {
    const categoriesContainer = document.getElementById('categoriesContainer');
    const prevButton = document.getElementById('prevCategory');
    const nextButton = document.getElementById('nextCategory');
    let categories;

    console.log('Raw data-categories:', categoriesContainer.dataset.categories);
    try {
        categories = JSON.parse(categoriesContainer.dataset.categories || '[]');
        console.log('Parsed categories:', categories);
        console.log('Unique categories:', [...new Set(categories.map(c => c.Name))]);
    } catch (e) {
        console.error('JSON Parse Error:', e, 'Raw Data:', categoriesContainer.dataset.categories);
        categories = [
            { Name: "Bags", ImgUrl: "/img/categories/bags.jpg", Link: "/Customer/Home/ShopByChildCategory?category=bags" },
            { Name: "Jackets", ImgUrl: "/img/categories/jackets.jpg", Link: "/Customer/Home/ShopByChildCategory?category=jackets" },
            { Name: "Hats", ImgUrl: "/img/categories/hats.jpg", Link: "/Customer/Home/ShopByChildCategory?category=hats" },
            { Name: "Shoes", ImgUrl: "/img/categories/shoes.jpg", Link: "/Customer/Home/ShopByChildCategory?category=shoes" },
            { Name: "Pantalons", ImgUrl: "/img/categories/pantalons.jpg", Link: "/Customer/Home/ShopByChildCategory?category=pantalons" },
            { Name: "Dresses", ImgUrl: "/img/categories/dresses.jpg", Link: "/Customer/Home/ShopByChildCategory?category=dresses" },
            { Name: "Shorts", ImgUrl: "/img/categories/shorts.jpg", Link: "/Customer/Home/ShopByChildCategory?category=shorts" },
            { Name: "Hoodie", ImgUrl: "/img/categories/hoodie.jpg", Link: "/Customer/Home/ShopByChildCategory?category=hoodie" }
        ];
        console.log('Using hardcoded categories:', categories);
    }

    if (!categories.length) {
        console.warn('No categories data available.');
        categoriesContainer.innerHTML = '<p class="text-center text-gray-500">No categories available.</p>';
        return;
    }

    let currentStartIndex = 0;
    let interval;
    let isTransitioning = false;
    let isDragging = false;
    let startX = 0;
    let currentTranslate = 0;
    let prevTranslate = 0;
    let uniqueCategoriesLength = 0;

    function isMobileView() {
        return window.innerWidth <= 768;
    }

    function getCardWidth() {
        const screenWidth = window.innerWidth;
        if (screenWidth <= 480) return isMobileView() ? (categoriesContainer.offsetWidth / 2 - 8) : Math.min(document.querySelector('#categoriesWrapper').offsetWidth - 16, 300 + 8);
        if (screenWidth <= 768) return isMobileView() ? (categoriesContainer.offsetWidth / 2 - 8) : 140 + 16;
        if (screenWidth <= 1280) return 180 + 16;
        return 200 + 16;
    }

    function getVisibleCards() {
        const screenWidth = window.innerWidth;
        if (screenWidth <= 480) return isMobileView() ? categories.length : 1;
        if (screenWidth <= 768) return isMobileView() ? categories.length : 3.5;
        if (screenWidth <= 1280) return 5;
        return 6;
    }

    function createCategoryCard(category, isMobile = false) {
        console.log('Creating card for category:', category.Name, 'with link:', category.Link);
        const card = document.createElement('div');
        card.className = 'category-card group cursor-pointer';
        card.style.willChange = isMobile ? 'auto' : 'transform';
        card.style.backfaceVisibility = isMobile ? 'visible' : 'hidden';
        if (!isMobile) {
            card.style.width = (getCardWidth() - 16) + 'px';
            card.style.flexShrink = '0';
        }
        card.innerHTML = `
            <a href="${category.Link || '#'}" class="absolute inset-0 z-10"></a>
            <div class="relative overflow-hidden rounded-2xl">
                <img src="${category.ImgUrl || '/img/categories/default.jpg'}" loading="lazy" alt="${category.Name || 'Category'}" class="w-full h-auto object-cover transition-transform duration-700 group-hover:scale-110">
            </div>
            <h4 class="category-name">${category.Name || 'Unknown Category'}</h4>
        `;
        return card;
    }

    function initializeCategories() {
        const isMobile = isMobileView();
        categoriesContainer.innerHTML = '';
        categoriesContainer.style.transform = 'none';
        categoriesContainer.style.transition = 'none';
        clearInterval(interval);

        if (categories.length) {
            const uniqueCategories = [...new Map(categories.map(c => [c.Name, c])).values()];
            uniqueCategoriesLength = uniqueCategories.length;
            if (isMobile) {
                uniqueCategories.forEach(category => {
                    const card = createCategoryCard(category, true);
                    categoriesContainer.appendChild(card);
                });
            } else {
                for (let i = 0; i < uniqueCategories.length * 3; i++) {
                    const idx = i % uniqueCategories.length;
                    const card = createCategoryCard(uniqueCategories[idx]);
                    categoriesContainer.appendChild(card);
                }
                const cardWidth = getCardWidth();
                currentTranslate = -cardWidth * uniqueCategories.length;
                prevTranslate = currentTranslate;
                categoriesContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
                categoriesContainer.style.transition = 'transform 0.8s ease-in-out';
                startAutoSlide();
            }
        } else {
            categoriesContainer.innerHTML = '<p class="text-center text-gray-500">No categories available.</p>';
        }
    }

    function updateSliderPosition(direction = 'next') {
        if (isTransitioning || !uniqueCategoriesLength || isMobileView()) return;
        isTransitioning = true;
        const cardWidth = getCardWidth();
        const totalWidth = cardWidth * uniqueCategoriesLength;

        if (direction === 'next') {
            currentStartIndex = (currentStartIndex + 1) % uniqueCategoriesLength;
            currentTranslate -= cardWidth;
        } else {
            currentStartIndex = (currentStartIndex - 1 + uniqueCategoriesLength) % uniqueCategoriesLength;
            currentTranslate += cardWidth;
        }

        categoriesContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;

        setTimeout(() => {
            // Reset translation to maintain infinite scroll
            if (currentTranslate <= -totalWidth * 2 || currentTranslate >= 0) {
                currentTranslate = -totalWidth;
                categoriesContainer.style.transition = 'none';
                categoriesContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
                setTimeout(() => {
                    categoriesContainer.style.transition = 'transform 0.8s ease-in-out';
                }, 50);
            }
            prevTranslate = currentTranslate;
            isTransitioning = false;
        }, 800);
    }

    function cycleCards(direction = 'next') {
        updateSliderPosition(direction);
    }

    function startAutoSlide() {
        if (uniqueCategoriesLength && !isMobileView()) {
            clearInterval(interval);
            interval = setInterval(() => cycleCards('next'), 3500);
        }
    }

    initializeCategories();

    if (!isMobileView()) {
        nextButton.addEventListener('click', () => {
            if (isTransitioning || !uniqueCategoriesLength) return;
            clearInterval(interval);
            cycleCards('next');
            startAutoSlide();
        });

        prevButton.addEventListener('click', () => {
            if (isTransitioning || !uniqueCategoriesLength) return;
            clearInterval(interval);
            cycleCards('prev');
            startAutoSlide();
        });

        categoriesContainer.addEventListener('mouseenter', () => clearInterval(interval));
        categoriesContainer.addEventListener('mouseleave', () => {
            if (!isDragging && uniqueCategoriesLength) {
                startAutoSlide();
            }
        });

        let animationFrameId;
        function startDrag(e) {
            if (!uniqueCategoriesLength || isMobileView()) return;
            isDragging = true;
            startX = (e.type === 'touchstart' ? e.touches[0].pageX : e.pageX) - currentTranslate;
            categoriesContainer.style.cursor = 'grabbing';
            clearInterval(interval);
            cancelAnimationFrame(animationFrameId);
        }

        function moveDrag(e) {
            if (!isDragging || isMobileView()) return;
            e.preventDefault();
            cancelAnimationFrame(animationFrameId);
            animationFrameId = requestAnimationFrame(() => {
                const x = (e.type === 'touchmove' ? e.touches[0].pageX : e.pageX) - startX;
                currentTranslate = x;
                categoriesContainer.style.transition = 'none';
                categoriesContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
            });
        }

        function endDrag() {
            if (!isDragging || isMobileView()) return;
            isDragging = false;
            categoriesContainer.style.cursor = 'pointer';
            categoriesContainer.style.transition = 'transform 0.5s ease-in-out';
            const cardWidth = getCardWidth();
            const threshold = cardWidth / 2;
            const draggedDistance = currentTranslate - prevTranslate;
            if (Math.abs(draggedDistance) > threshold) {
                cycleCards(draggedDistance < 0 ? 'next' : 'prev');
            } else {
                categoriesContainer.style.transform = `translate3d(${prevTranslate}px, 0, 0)`;
                isTransitioning = false;
            }
            prevTranslate = currentTranslate;
            startAutoSlide();
        }

        categoriesContainer.addEventListener('mousedown', startDrag);
        categoriesContainer.addEventListener('mousemove', moveDrag);
        categoriesContainer.addEventListener('mouseup', endDrag);
        categoriesContainer.addEventListener('mouseleave', endDrag);
        categoriesContainer.addEventListener('touchstart', startDrag);
        categoriesContainer.addEventListener('touchmove', moveDrag);
        categoriesContainer.addEventListener('touchend', endDrag);
        categoriesContainer.addEventListener('selectstart', (e) => e.preventDefault());
    }

    window.addEventListener('resize', () => {
        if (!categories.length) return;
        initializeCategories();
    });
});
//scroll animates
            document.addEventListener('DOMContentLoaded', () => {
                const animateOnScroll = (entries, observer) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            entry.target.classList.add('visible');
                            observer.unobserve(entry.target);
                        }
                    });
                };

                const observerOptions = {
                    root: null,
                    rootMargin: '0px',
                    threshold: 0.3
                };

                const observer = new IntersectionObserver(animateOnScroll, observerOptions);

                // Observe all animated elements
                document.querySelectorAll('.scroll-animate').forEach(el => observer.observe(el));
            });
</script>