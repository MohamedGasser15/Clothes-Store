@using Clothes_Models.ViewModels
@model IEnumerable<HomeViewModel>

@{
    ViewData["Title"] = "Home Page";
    var showSuccessMessage = TempData["AddToCartSuccess"] != null && (bool)TempData["AddToCartSuccess"];
    var showErrorMessage = TempData["AddToCartError"] != null && (bool)TempData["AddToCartError"];
    var errorMessage = TempData["ErrorMessage"]?.ToString() ?? "An error occurred while adding to cart";
    var featuredProducts = Model.Where(p => p.IsFeatured).ToList();
}
<link rel="stylesheet" href="~/css/style.css">
<style>
    /* Category Slider */
    #categoriesWrapper {
        overflow-x: hidden;
    }

    #categoriesContainer {
        display: flex;
        flex-wrap: nowrap;
        gap: 1rem;
        will-change: transform;
        backface-visibility: hidden;
        perspective: 1000;
        scroll-snap-type: x mandatory;
    }

    .category-card {
        flex: 0 0 auto;
        width: 200px;
        height: 240px;
        padding: 0.75rem;
        border: 1px solid #cce7d0;
        border-radius: 1.5rem;
        cursor: pointer;
        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.02);
        transition: box-shadow 0.2s ease, transform 0.2s ease;
        background-color: #fff;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-between;
        position: relative;
        scroll-snap-align: start;
    }

        .category-card:hover {
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.06);
            transform: translateY(-4px);
        }

        .category-card img {
            width: 100%;
            height: auto;
            max-height: 160px;
            object-fit: cover;
            border-radius: 1.25rem;
        }

        .category-card h4.category-name {
            font-size: 1rem;
            line-height: 1.5rem;
            font-weight: 600;
            color: #222;
            margin-top: 0.5rem;
            text-align: center;
        }

        .category-card:hover h4.category-name {
            color: #088178;
            transform: scale(1.05);
        }

    /* Responsive Adjustments */
    @@media (max-width: 1280px) {
        .category-card

    {
        width: 180px;
        height: 220px;
    }

    .category-card img {
        max-height: 140px;
    }

    .category-card h4.category-name {
        font-size: 0.875rem;
        line-height: 1.25rem;
    }

    }

    @@media (max-width: 768px) {
        #popular-categories .navigation-buttons, #popular-Brands .navigation-buttons

    {
        display: none;
    }

    #categoriesContainer,
    #brandsContainer {
        flex-wrap: wrap;
        gap: 1rem;
        justify-content: center;
        scroll-snap-type: none;
    }

    .category-card {
        flex: 0 0 calc(50% - 0.5rem);
        width: auto;
        height: 180px;
        margin-bottom: 1rem;
    }

        .category-card img {
            max-height: 110px;
        }

        .category-card h4.category-name {
            font-size: 0.875rem;
            line-height: 1.25rem;
        }

    #popular-categories .flex.items-center.mb-12,
    #popular-Brands .flex.items-center.mb-12 {
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
    }

    }

    @@media (max-width: 480px) {
        .category-card

    {
        flex: 0 0 calc(50% - 0.5rem);
        max-width: 160px;
        height: 160px;
        margin-bottom: 0.5rem;
    }

    .category-card img {
        max-height: 100px;
    }

    .category-card h4.category-name {
        font-size: 0.75rem;
        line-height: 1.1rem;
    }

    #popular-categories,
    #popular-Brands {
        padding-left: 0.5rem;
        padding-right: 0.5rem;
    }

    #categoriesContainer,
    #brandsContainer {
        gap: 0.5rem;
        justify-content: center;
    }

    }

    /* New Arrivals */
    #brandsWrapper {
        overflow-x: hidden;
    }

    #brandsContainer {
        display: flex;
        flex-wrap: nowrap;
        gap: 1rem;
        will-change: transform;
        backface-visibility: hidden;
        perspective: 1000;
        scroll-snap-type: x mandatory;
    }

    /* Three Banners */
    .banners {
        background-color: #fff;
        padding: 1rem 1rem 5rem 1rem;
    }

    .banner-img {
        position: relative;
        overflow: hidden;
    }

    .banner-text {
        position: absolute;
        top: 50%;
        right: 10%;
        transform: translateY(-50%);
        text-align: left;
        color: #fff;
        transition: transform 0.3s ease;
    }

    .banner-img:hover .banner-text {
        transform: translateY(-50%) translateX(-10px);
    }

    .banner-text span {
        font-size: 14px;
        font-weight: 400;
        display: block;
        color: silver;
        font-family: 'Roboto', sans-serif;
    }

    .banner-text h4 {
        font-size: 24px;
        font-weight: 600;
        margin: 10px 0;
        font-family: 'Roboto', sans-serif;
    }

    .banner-text a {
        color: #088178;
        text-decoration: none;
        font-weight: 300;
        font-family: 'Arial', sans-serif;
    }

        .banner-text a:hover {
            color: #046963;
        }

    .wow {
        visibility: hidden;
    }

        .wow.fadeIn {
            animation-name: fadeIn;
            animation-duration: 1s;
            animation-fill-mode: both;
        }

    @@keyframes fadeIn {
        from

    {
        opacity: 0;
    }

    to {
        opacity: 1;
    }

    }

    .banner-img img {
        width: 100%;
        height: auto;
        display: block;
        aspect-ratio: 16/9;
    }

    .container {
        width: 100%;
        padding-right: 8px;
        padding-left: 8px;
        margin-right: auto;
        margin-left: auto;
        max-width: 80rem;
    }

    .row {
        display: flex;
        flex-wrap: wrap;
        margin-right: -8px;
        margin-left: -8px;
        gap: 0.5rem;
    }

    .col-lg-4 {
        flex: 0 0 33.333333%;
        max-width: 33.333333%;
        padding: 0 8px;
    }

    .d Ascot: none;
    display: block !important;
    }

    .d-md-none {
        display: block !important;
    }

    .d-lg-flex {
        display: block !important;
    }

    .mb-sm-0 {
        margin-bottom: 0;
    }

    @@media (max-width: 639px) {
        .banner-img

    {
        max-width: 100%;
        margin: 0 auto;
    }

    .banner-text span {
        font-size: 12px;
    }

    .banner-text h4 {
        font-size: 18px;
    }

    .banner-text a {
        font-size: 12px;
    }

    .col-lg-4 {
        flex: 0 0 100%;
        max-width: 100%;
    }

    }

    @@media (min-width: 640px) {
        .banners

    {
        padding-left: 1.5rem;
        padding-right: 1.5rem;
    }

    }

    @@media (min-width: 768px) {
        .col-lg-4

    {
        flex: 0 0 33.333333%;
        max-width: 33.333333%;
    }

    .d-md-none {
        display: flex !important;
    }

    .d-lg-flex {
        display: flex !important;
    }

    }

    @@media (min-width: 1024px) {
        .banners

    {
        padding-left: 2rem;
        padding-right: 2rem;
    }

    .row {
        flex-wrap: nowrap;
    }

    }

    #brands {
        background-color: #ffffff !important;
    }

    body {
        background-color: #ffffff !important;
        margin: 0;
    }

    section, div {
        background-color: transparent;
    }

    /* Back to top button */
    .back-to-top {
        position: fixed;
        bottom: 30px;
        right: 30px;
        width: 50px;
        height: 50px;
        background-color: #088178;
        color: white;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 20px;
        cursor: pointer;
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s ease;
        z-index: 999;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

        .back-to-top:hover {
            background-color: #066156;
            transform: translateY(-3px);
        }

        .back-to-top.visible {
            opacity: 1;
            visibility: visible;
        }

    @@media (max-width: 768px) {
        .back-to-top

    {
        width: 40px;
        height: 40px;
        font-size: 16px;
        bottom: 20px;
        right: 20px;
    }

    }

    #hero button a {
        text-decoration: none;
        color: #088178;
    }

    #hero {
        background-image: url("../img/hero6.png");
    }

    @@media (max-width: 477px) {
        #hero

    {
        padding-bottom: 90px;
        background-position: 50% 30%;
        height: 70vh;
    }

    }

    /* Notification styles */
    .notification-container {
        position: fixed;
        top: 1.5rem;
        right: 1.5rem;
        z-index: 1000;
    }

    .notification {
        padding: 1rem 1.5rem;
        color: white;
        border-radius: 0.75rem;
        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        display: flex;
        align-items: center;
        transform: translateX(150%);
        transition: all 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
        margin-bottom: 1rem;
        position: relative;
        overflow: hidden;
    }

        .notification.success {
            background-color: #088178;
        }

        .notification.error {
            background-color: #ef4444;
        }

        .notification.show {
            transform: translateX(0);
        }

        .notification.hide {
            transform: translateX(150%);
            opacity: 0;
        }

    .notification-icon {
        margin-right: 0.75rem;
        font-size: 1.25rem;
    }

    .notification-close {
        margin-left: 1rem;
        cursor: pointer;
        opacity: 0.7;
        transition: opacity 0.2s;
    }

        .notification-close:hover {
            opacity: 1;
        }

    .notification-progress {
        position: absolute;
        bottom: 0;
        left: 0;
        height: 4px;
        width: 100%;
        background: rgba(255, 255, 255, 0.3);
    }

    .notification-progress-bar {
        height: 100%;
        width: 100%;
        background: white;
        animation: progress 3s linear forwards;
        transform-origin: left;
    }

    @@keyframes progress {
        0%

    {
        transform: scaleX(0);
    }

    100% {
        transform: scaleX(1);
    }

    }

    /* Bounce animation for cart button */
    @@keyframes bounce {
        0%, 20%, 50%, 80%, 100%

    {
        transform: translateY(0);
    }

    40% {
        transform: translateY(-10px);
    }

    60% {
        transform: translateY(-5px);
    }

    }

    .bounce-effect {
        animation: bounce 1s;
    }

    /* Size selection modal styles */
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000;
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s ease;
    }

        .modal-overlay.active {
            opacity: 1;
            visibility: visible;
        }

    .size-modal {
        background-color: white;
        border-radius: 0.5rem;
        width: 90%;
        max-width: 400px;
        padding: 1.5rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
    }

    .modal-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: #333;
    }

    .close-modal {
        background: none;
        border: none;
        font-size: 1.5rem;
        cursor: pointer;
        color: #666;
    }

    .size-options {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 0.75rem;
        margin-bottom: 1.5rem;
    }

    .size-option {
        border: 1px solid #cce7d0;
        background-color: #e8f6ea;
        color: #088178;
        border-radius: 0.5rem;
        padding: 0.5rem 1rem;
        cursor: pointer;
        transition: all 0.3s ease;
        text-align: center;
    }

        .size-option:hover {
            background-color: #088178;
            color: white;
            border-color: #088178;
        }

        .size-option.active {
            background-color: #088178;
            color: white;
            border-color: #088178;
        }

        .size-option.disabled {
            opacity: 0.5;
            cursor: not-allowed;
            text-decoration: line-through;
            position: relative;
        }

            .size-option.disabled::after {
                content: "×";
                position: absolute;
                top: -5px;
                right: -5px;
                background: #ef4444;
                color: white;
                border-radius: 50%;
                width: 18px;
                height: 18px;
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 12px;
            }

    .modal-actions {
        display: flex;
        justify-content: flex-end;
        gap: 0.75rem;
    }

    .modal-button {
        padding: 0.5rem 1rem;
        border-radius: 0.25rem;
        cursor: pointer;
        transition: all 0.2s ease;
    }

    .cancel-button {
        background-color: #f5f5f5;
        border: 1px solid #ddd;
        color: #333;
    }

    .confirm-button {
        background-color: #088178;
        border: 1px solid #088178;
        color: white;
    }

        .confirm-button:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }

    /* Quantity Selector Styles */
    .quantity-selector {
        display: flex;
        align-items: center;
        margin: 1.5rem 0;
        justify-content: center;
    }

    .quantity-label {
        margin-right: 1rem;
        font-weight: 500;
        color: #333;
        font-size: 0.95rem;
    }

    .quantity-controls {
        display: flex;
        align-items: center;
        border: 1px solid #cce7d0;
        border-radius: 0.5rem;
        overflow: hidden;
        background-color: #f8f9fa;
    }

    .quantity-btn {
        width: 2.5rem;
        height: 2.5rem;
        background-color: #e8f6ea;
        border: none;
        font-size: 1.2rem;
        color: #088178;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.2s ease;
        padding: 0;
    }

        .quantity-btn:hover {
            background-color: #cce7d0;
        }

    .quantity-input {
        width: 3.5rem;
        height: 2.5rem;
        text-align: center;
        border: none;
        border-left: 1px solid #cce7d0;
        border-right: 1px solid #cce7d0;
        font-size: 1rem;
        font-weight: 500;
        padding: 0 0.5rem;
        -moz-appearance: textfield;
        background-color: white;
    }

        .quantity-input::-webkit-outer-spin-button,
        .quantity-input::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        .quantity-input:focus {
            outline: none;
            box-shadow: 0 0 0 2px rgba(8, 129, 120, 0.2);
        }

    /* Stock info styles */
    .stock-info {
        font-size: 0.85rem;
        color: #666;
        margin-top: 0.5rem;
        text-align: center;
    }

    /* Banner styles */
    .banner-slide {
        background-size: cover;
        background-position: center;
        opacity: 0;
        z-index: 0;
        transition: opacity 1s ease-in-out;
    }

        .banner-slide:first-child {
            opacity: 1;
            z-index: 1;
        }

    @@media (max-width: 768px) {
        #page-header

    {
        height: 30vh;
    }

    }

    /* View All Button */
    .view-all-btn {
        display: inline-flex;
        align-items: center;
        padding: 0.5rem 1.25rem;
        background-color: #088178;
        color: white;
        border-radius: 4px;
        font-weight: 500;
        text-decoration: none;
        transition: all 0.3s ease;
    }

        .view-all-btn:hover {
            background-color: #066156;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .view-all-btn i {
            transition: transform 0.3s ease;
        }

        .view-all-btn:hover i {
            transform: translateX(4px);
        }

    @@media (max-width: 768px) {
        .view-all-btn

    {
        padding: 0.4rem 1rem;
        font-size: 0.9rem;
    }

    }

    .product-brand,
    .product-description {
        transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

        .product-brand:hover,
        .product-description:hover {
            color: #088178 !important;
            transform: translateY(-1px);
            cursor: pointer;
            text-decoration: none;
            text-underline-offset: 2px;
        }

    /* Quick View Modal */
    .quick-view-modal {
        background-color: white;
        border-radius: 0.5rem;
        width: 90%;
        max-width: 700px;
        padding: 1.5rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .quick-view-content {
        display: flex;
        gap: 1.5rem;
    }

    .quick-view-image {
        flex: 1;
    }

        .quick-view-image img {
            width: 100%;
            max-width: 400px;
            height: auto;
            border-radius: 0.5rem;
        }

    .quick-view-details {
        flex: 1;
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
    }

    .quick-view-rating {
        display: flex;
        align-items: center;
        gap: 0.25rem;
    }

        .quick-view-rating i {
            color: #f5c518;
            font-size: 0.9rem;
        }

    .quick-view-price {
        font-size: 1.25rem;
        font-weight: 600;
        color: #088178;
    }

    .quick-view-description {
        font-size: 0.9rem;
        color: #666;
        line-height: 1.5;
    }

    .quick-view-sizes {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .size-label {
        font-weight: 500;
        color: #333;
        font-size: 0.95rem;
    }

    .size-options {
        display: flex;
        gap: 0.5rem;
    }

    .size-option {
        border: 1px solid #cce7d0;
        background-color: #e8f6ea;
        color: #088178;
        border-radius: 0.5rem;
        padding: 0.5rem 1rem;
        cursor: pointer;
        transition: all 0.3s ease;
        text-align: center;
        font-size: 0.9rem;
    }

        .size-option:hover {
            background-color: #088178;
            color: white;
            border-color: #088178;
        }

        .size-option.selected {
            background-color: #088178;
            color: white;
            border-color: #088178;
        }

    .quick-view-actions {
        margin-top: 1rem;
    }

        .quick-view-actions .confirm-button {
            width: 100%;
            padding: 0.75rem;
            font-size: 1rem;
            background-color: #088178;
            border: 1px solid #088178;
            color: white;
            border-radius: 0.25rem;
            cursor: pointer;
            transition: all 0.3s ease;
        }

            .quick-view-actions .confirm-button:hover {
                background-color: #066156;
                transform: scale(1.05);
            }

    /* Icon Overlay for Quick View Button */
    .icon-overlay {
        position: absolute;
        top: 10px;
        right: 10px;
        display: flex;
        flex-direction: column;
        gap: 10px;
        opacity: 0;
        transition: opacity 0.3s ease, transform 0.3s ease;
        transform: translateX(20px);
    }

    .pro:hover .icon-overlay {
        opacity: 1;
        transform: translateX(0);
    }

    .icon-overlay button {
        width: 38px;
        height: 38px;
        background-color: #088178;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 16px;
        border: 2px solid rgba(255, 255, 255, 0.8);
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
        transition: transform 0.2s ease, background-color 0.3s ease;
        cursor: pointer;
        padding: 0;
    }

        .icon-overlay button:hover {
            transform: scale(1.15);
            background-color: #066156;
        }
</style>


<!-- Hero Section -->
<section id="hero" class="px-8 sm:px-12 lg:px-16 max-w-7xl mx-auto">
    <h4>Limited-Time Offer</h4>
    <h2>Exclusive Discounts</h2>
    <h1>Across All Categories</h1>
    <p>Grab extra coupons & save up to 70% today!</p>
    <button><a asp-controller="Home" asp-action="Shop">Shop now</a></button>
</section>
<div class="container mx-auto px-1 sm:px-2 lg:px-4">
    <!-- Notification Container -->
    <div class="notification-container">
        <!-- Notifications will be added here dynamically -->
    </div>
    <!-- Quick View Modal -->
    <div class="modal-overlay" id="quickViewModal">
        <div class="quick-view-modal">
            <div class="modal-header">
                <h3 class="modal-title" id="quickViewProductName"></h3>
                <button class="close-modal" onclick="hideQuickViewModal()">×</button>
            </div>
            <div class="quick-view-content">
                <div class="quick-view-image">
                    <img id="quickViewProductImage" src="" alt="Product Image">
                </div>
                <div class="quick-view-details">
                    <div class="quick-view-rating" id="quickViewRating"></div>
                    <h4 class="quick-view-price" id="quickViewPrice"></h4>
                    <p class="quick-view-description" id="quickViewDescription"></p>
                    <div class="quick-view-sizes">
                        <span class="size-label">Size:</span>
                        <div class="size-options" id="quickViewSizes"></div>
                    </div>
                    <div class="quick-view-actions">
                        <div class="quantity-selector">
                            <span class="quantity-label">Quantity:</span>
                            <div class="quantity-controls">
                                <button class="quantity-btn" id="quickViewDecrementQty">-</button>
                                <input type="number" id="quickViewQuantityInput" class="quantity-input" value="1" min="1" max="10">
                                <button class="quantity-btn" id="quickViewIncrementQty">+</button>
                            </div>
                        </div>
                        <button class="modal-button confirm-button" id="quickViewAddToCart">Add to Cart</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Size and Quantity Selection Modal -->
    <div class="modal-overlay" id="sizeModal">
        <div class="size-modal">
            <div class="modal-header">
                <h3 class="modal-title">Select Size & Quantity</h3>
                <button class="close-modal" onclick="hideSizeModal()">×</button>
            </div>
            <div class="size-options" id="sizeOptionsContainer">
                <!-- Size options populated dynamically -->
            </div>
            <div class="quantity-selector">
                <span class="quantity-label">Quantity:</span>
                <div class="quantity-controls">
                    <button class="quantity-btn" id="decrementQty">-</button>
                    <input type="number" id="quantityInput" class="quantity-input" value="1" min="1" max="10">
                    <button class="quantity-btn" id="incrementQty">+</button>
                </div>
            </div>
            <div class="stock-info" id="stockInfo"></div>
            <div class="modal-actions">
                <button class="modal-button cancel-button" onclick="hideSizeModal()">Cancel</button>
                <button class="modal-button confirm-button" id="confirmAddToCart" disabled>Add to Cart</button>
            </div>
        </div>
    </div>
    <!-- Featured Products Section -->
    <section id="product1" class="px-8 sm:px-12 lg:px-16 pt-20 pb-4 bg-white max-w-7xl mx-auto">
        <div class="max-w-7xl mx-auto">
            <div class="flex justify-between items-center mb-4">
                <div class="text-left">
                    <h2 class="text-3xl font-bold text-gray-800 mb-1">
                        Featured <span class="text-[#088178]">Products</span>
                    </h2>
                    <p class="text-lg text-gray-600 max-w-2xl">
                        Discover our handpicked selection of <span class="text-[#088178]">premium fashion</span> items
                    </p>
                </div>
                @if (featuredProducts.Any())
                {
                    <a href="@Url.Action("Shop", "Home", new { area = "Customer" })"
                       class="group text-[#088178] text-sm sm:text-base font-medium transition-all duration-300 hover:text-[#065f5b] hover:underline flex items-center">
                        View All
                        <i class="fas fa-arrow-right ml-2 transform transition-transform duration-300 group-hover:translate-x-1"></i>
                    </a>
                }
            </div>
            <div id="productContainer" class="pro-container mb-12 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
                @if (featuredProducts.Any())
                {
                    @foreach (var product in featuredProducts)
                    {
                        <div class="pro group cursor-pointer relative">
                            <div class="relative overflow-hidden rounded-2xl">
                                <img src="@product.imgUrl" alt="@product.Product_Name" class="product-img w-full h-auto object-cover transition-transform duration-700 group-hover:scale-110">
                                @if (product.IsFeatured)
                                {
                                    <span class="absolute top-2 left-2 bg-[#088178] text-white text-xs font-bold px-2 py-1 rounded-full shadow-sm">
                                        FEATURED
                                    </span>
                                }
                                <div class="icon-overlay">
                                    <button onclick="event.stopPropagation(); showQuickViewModal(@product.Product_Id);">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="des p-4">
                                <span class="product-brand">@product.BrandName</span>
                                <h5 class="product-description">@product.Product_Name</h5>
                                <div class="star">
                                    @for (int i = 0; i < product.Product_Rating; i++)
                                    {
                                        <i class="fas fa-star"></i>
                                    }
                                    @for (int i = product.Product_Rating; i < 5; i++)
                                    {
                                        <i class="far fa-star"></i>
                                    }
                                </div>
                                <h4 class="product-price">$@product.Product_Price</h4>
                            </div>
                            <div class="pro-cart-button absolute bottom-4 right-4" onclick="event.stopPropagation(); showSizeModal(@product.Product_Id)">
                                <i class="fas fa-shopping-cart"></i>
                            </div>
                            <form class="add-to-cart-form" data-product-id="@product.Product_Id" style="display: none;">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="productId" value="@product.Product_Id" />
                                <input type="hidden" name="quantity" id="quantity-@product.Product_Id" value="1" />
                                <input type="hidden" name="size" id="size-@product.Product_Id" value="" />
                            </form>
                        </div>
                    }
                }
                else
                {
                    <div class="w-full flex flex-col items-center justify-center py-12 px-4">
                        <div class="text-center max-w-md mx-auto">
                            <div class="mb-6">
                                <i class="fas fa-star text-gray-300 text-5xl animate-pulse"></i>
                            </div>
                            <h3 class="text-2xl font-semibold text-gray-800 mb-3">No Featured Products Right Now</h3>
                            <p class="text-gray-600 mb-6 leading-relaxed">
                                We're currently refreshing our featured collection with exciting new arrivals.
                                Check back soon to discover our premium selections!
                            </p>
                            <div class="mt-6">
                                <a href="@Url.Action("Shop", "Home", new { area = "Customer" })"
                                   class="inline-flex items-center px-6 py-3 bg-primary text-white rounded-lg hover:bg-primary-dark transition-all duration-300 transform hover:scale-105 shadow-md">
                                    <i class="fas fa-store mr-3"></i>
                                    <span class="font-medium">Explore All Products</span>
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>
    <!-- Home Banner Section -->
    <section id="home-banner" class="px-4 sm:px-6 lg:px-16 py-6 bg-white max-w-7xl mx-auto">
        <div class="max-w-7xl mx-auto">
            <div class="relative overflow-hidden rounded-2xl h-[500px] sm:h-[400px] lg:h-[400px] group">
                <!-- Background Image -->
                <div class="absolute inset-0 bg-[url('/img/banner/HomeBanner.png')] bg-cover sm:bg-contain bg-center sm:bg-no-repeat bg-[length:30%_25%]"></div>
                <!-- Subtle Hover Overlay -->
                <div class="absolute inset-0 bg-white/15 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                <!-- Content Container -->
                <div class="relative z-10 p-4 sm:p-6 lg:p-8 h-full flex flex-col justify-center items-end text-right font-['Montserrat',sans-serif]">
                    <div class="w-full sm:w-auto">
                        <h2 class="text-sm sm:text-base font-medium mb-2 text-[#088178] tracking-wider">
                            Shop With Style
                        </h2>
                        <p class="text-lg sm:text-2xl lg:text-3xl font-bold mb-4 text-black tracking-tight leading-tight">
                            Discover the Latest<br>Fashion Trends Today
                        </p>
                    </div>
                    <a asp-action="shop" class="inline-flex items-center bg-[#088178] text-white font-medium py-2 px-4 sm:px-6 rounded-md w-max transition-all duration-300 group/button hover:bg-[#066156] shadow-md hover:shadow-lg">
                        <span class="text-sm sm:text-base">Discover</span>
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 sm:h-5 sm:w-5 ml-2 opacity-0 group-hover/button:opacity-100 transform translate-x-0 group-hover/button:translate-x-1 transition-all duration-300" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                        </svg>
                    </a>
                </div>
            </div>
        </div>
    </section>

    <!-- popular categories Section -->
    <section id="popular-categories" class="px-4 sm:px-6 lg:px-8 pt-4 pb-20 bg-white max-w-7xl mx-auto">
        <div class="max-w-7xl mx-auto">
            <div class="flex items-center justify-between mb-12">
                <h2 class="text-3xl md:text-4xl font-bold">
                    Popular <span class="text-[#088178]">Categories</span>
                </h2>
                <div class="flex space-x-4 navigation-buttons">
                    <button id="prevCategory" class="w-10 h-10 flex items-center justify-center rounded-full bg-[#088178] hover:bg-[#066156] text-white hover:text-white transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed" aria-label="Previous Category">
                        <i class="fas fa-chevron-left"></i>
                    </button>
                    <button id="nextCategory" class="w-10 h-10 flex items-center justify-center rounded-full bg-[#088178] hover:bg-[#066156] text-white hover:text-white transition-all duration-300" aria-label="Next Category">
                        <i class="fas fa-chevron-right"></i>
                    </button>
                </div>
            </div>
            <div class="relative overflow-hidden">
                <div id="categoriesWrapper" class="w-full overflow-hidden mx-auto">
                    <div id="categoriesContainer" class="flex items-start flex-nowrap gap-6" data-categories='@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Categories ?? new List<object>()))'>
                        <!-- Cards generated by JavaScript -->
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Three Banners Section -->
    <section class="banners bg-white px-4 sm:px-6 lg:px-8 pt-4 pb-20 max-w-7xl mx-auto">
        <div class="container max-w-7xl mx-auto">
            <div class="row flex flex-wrap -mx-2 gap-2">
                <div class="col-lg-4 d-md-none d-lg-flex px-2">
                    <div class="banner-img relative overflow-hidden wow fadeIn animated mb-0" style="visibility: visible;">
                        <div class="relative group">
                            <img src="~/img/banner/banner3.png" alt="" class="w-full h-auto block" style="aspect-ratio: 16/9;">
                            <div class="absolute inset-0 bg-white/15 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                        </div>
                        <div class="banner-text absolute top-1/2 right-[10%] -translate-y-1/2 text-left text-white group-hover:-translate-x-2.5 transition-transform duration-300">
                            <span class="block text-xs font-normal text-gray-400 font-['Roboto',sans-serif]">New Arrival</span>
                            <h4 class="text-xl font-semibold my-2.5 font-['Roboto',sans-serif]">Buy Today <br>Deals & Offers</h4>
                            <a href="shop-grid-right.html" class="text-[#088178] no-underline font-light text-sm font-['Arial',sans-serif] hover:text-[#046963] transition-colors">
                                Buy
                                <svg class="inline-block w-4 h-4 ml-1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <path d="M5 12h14M12 5l7 7-7 7" />
                                </svg> Now
                            </a>
                        </div>
                    </div>
                </div>

                <div class="col-lg-4 d-md-none d-lg-flex px-2">
                    <div class="banner-img relative overflow-hidden wow fadeIn animated" style="visibility: visible;">
                        <div class="relative group">
                            <img src="~/img/banner/banner2.png" alt="" class="w-full h-auto block" style="aspect-ratio: 16/9;">
                            <div class="absolute inset-0 bg-white/15 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                        </div>
                        <div class="banner-text absolute top-1/2 right-[10%] -translate-y-1/2 text-left text-white group-hover:-translate-x-2.5 transition-transform duration-300">
                            <span class="block text-xs font-normal text-gray-400 font-['Roboto',sans-serif]">Summer Sale</span>
                            <h4 class="text-xl font-semibold my-2.5 font-['Roboto',sans-serif]">Grab Cool <br>Styles</h4>
                            <a href="shop-grid-right.html" class="text-[#088178] no-underline font-light text-sm font-['Arial',sans-serif] hover:text-[#046963] transition-colors">
                                Buy
                                <svg class="inline-block w-4 h-4 ml-1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <path d="M5 12h14M12 5l7 7-7 7" />
                                </svg> Now
                            </a>
                        </div>
                    </div>
                </div>

                <div class="col-lg-4 d-md-none d-lg-flex px-2">
                    <div class="banner-img relative overflow-hidden wow fadeIn animated" style="visibility: visible;">
                        <div class="relative group">
                            <img src="~/img/banner/banner1.png" alt="" class="w-full h-auto block" style="aspect-ratio: 16/9;">
                            <div class="absolute inset-0 bg-white/15 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                        </div>
                        <div class="banner-text absolute top-1/2 right-[10%] -translate-y-1/2 text-left text-white group-hover:-translate-x-2.5 transition-transform duration-300">
                            <span class="block text-xs font-normal text-gray-400 font-['Roboto',sans-serif]">Hot Deal</span>
                            <h4 class="text-xl font-semibold my-2.5 font-['Roboto',sans-serif]">20% Off <br>Bags Now</h4>
                            <a href="shop-grid-right.html" class="text-[#088178] no-underline font-light text-sm font-['Arial',sans-serif] hover:text-[#046963] transition-colors">
                                Buy
                                <svg class="inline-block w-4 h-4 ml-1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <path d="M5 12h14M12 5l7 7-7 7" />
                                </svg> Now
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- New Arrivals Section -->
    <section id="product1" class="px-4 sm:px-6 lg:px-8 pt-4 pb-20 bg-white max-w-7xl mx-auto">
        <div class="max-w-7xl mx-auto">
            <div class="flex items-center justify-between mb-12">
                <h2 class="text-3xl md:text-4xl font-bold text-[#088178]">
                    New <span class="text-[#088178]">Arrivals</span>
                </h2>
                <div class="flex space-x-4">
                    <button id="prevProduct" class="w-10 h-10 flex items-center justify-center rounded-full bg-[#088178] hover:bg-[#066156] text-white transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed" aria-label="Previous Product">
                        <i class="fas fa-chevron-left"></i>
                    </button>
                    <button id="nextProduct" class="w-10 h-10 flex items-center justify-center rounded-full bg-[#088178] hover:bg-[#066156] text-white transition-all duration-300" aria-label="Next Product">
                        <i class="fas fa-chevron-right"></i>
                    </button>
                </div>
            </div>
            <div class="relative overflow-hidden">
                <div id="productsWrapper" class="w-full overflow-hidden mx-auto">
                    <div id="productsContainer" class="flex items-start flex-nowrap gap-6" data-products='@Html.Raw(Json.Serialize(Model))'></div>
                </div>
            </div>
        </div>
    </section>

    <!-- popular Brands Section -->
    <section id="popular-Brands" class="px-4 sm:px-6 lg:px-8 pt-4 pb-20 bg-white max-w-7xl mx-auto">
        <div class="max-w-7xl mx-auto">
            <div class="flex items-center justify-between mb-12">
                <h2 class="text-3xl md:text-4xl font-bold">
                    Popular <span class="text-[#088178]">Brands</span>
                </h2>
                <div class="flex space-x-4 navigation-buttons">
                    <button id="prevBrand" class="w-10 h-10 flex items-center justify-center rounded-full bg-[#088178] hover:bg-[#066156] text-white hover:text-white transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed" aria-label="Previous Brand">
                        <i class="fas fa-chevron-left"></i>
                    </button>
                    <button id="nextBrand" class="w-10 h-10 flex items-center justify-center rounded-full bg-[#088178] hover:bg-[#066156] text-white hover:text-white transition-all duration-300" aria-label="Next Brand">
                        <i class="fas fa-chevron-right"></i>
                    </button>
                </div>
            </div>
            <div class="relative overflow-hidden">
                <div id="brandsWrapper" class="w-full overflow-hidden mx-auto">
                    <div id="brandsContainer" class="flex items-start flex-nowrap gap-6" data-brands="@Json.Serialize(ViewBag.Brands ?? new List<object>())">
                        <!-- Cards generated by JavaScript -->
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- ShopByCategory -->
    <section id="categories" class="px-8 sm:px-12 lg:px-16 py-20 bg-white max-w-7xl mx-auto" style="background-color: #ffffff !important;">
        <div class="max-w-7xl mx-auto">
            <div class="text-center mb-20">
                <h2 class="text-4xl md:text-5xl font-bold text-gray-900 mb-4">Browse Collections</h2>
                <p class="text-xl text-gray-600 mx-auto max-w-2xl">Discover your perfect style across our categories</p>
            </div>
            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-10">
                <!-- 1. Men's Fashion -->
                <div class="group relative overflow-hidden rounded-xl shadow-md hover:shadow-xl transition-all duration-300 h-72 mx-2 my-2">
                    <div class="absolute inset-0 bg-gradient-to-t from-black/70 to-transparent z-10"></div>
                    <img src="https://images.unsplash.com/photo-1591047139829-d91aecb6caea?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=600&q=80"
                         alt="Men's Fashion"
                         class="w-full h-full object-cover transform group-hover:scale-105 transition-transform duration-500">
                    <div class="absolute bottom-0 left-0 z-20 p-6 w-full">
                        <h3 class="text-xl font-bold text-white mb-2">Men's Fashion</h3>
                        <a href="@Url.Action("ShopByCategory", "Home", new { area = "Customer", category = "mens-fashion" })" class="inline-flex items-center text-white text-sm font-medium group-hover:text-[#088170] transition-colors duration-300">
                            Shop Now
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1 group-hover:translate-x-1 transition-transform duration-300" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                            </svg>
                        </a>
                    </div>
                </div>

                <!-- 2. Women's Fashion -->
                <div class="group relative overflow-hidden rounded-xl shadow-md hover:shadow-xl transition-all duration-300 h-72 mx-2 my-2">
                    <div class="absolute inset-0 bg-gradient-to-t from-black/70 to-transparent z-10"></div>
                    <img src="https://images.unsplash.com/photo-1489987707025-afc232f7ea0f?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=600&q=80"
                         alt="Women's Fashion"
                         class="w-full h-full object-cover transform group-hover:scale-105 transition-transform duration-500">
                    <div class="absolute bottom-0 left-0 z-20 p-6 w-full">
                        <h3 class="text-xl font-bold text-white mb-2">Women's Fashion</h3>
                        <a href="@Url.Action("ShopByCategory", "Home", new { area = "Customer", category = "womens-fashion" })" class="inline-flex items-center text-white text-sm font-medium group-hover:text-[#088170] transition-colors duration-300">
                            Shop Now
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1 group-hover:translate-x-1 transition-transform duration-300" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                            </svg>
                        </a>
                    </div>
                </div>

                <!-- 3. Kids Fashion -->
                <div class="group relative overflow-hidden rounded-xl shadow-md hover:shadow-xl transition-all duration-300 h-72 mx-2 my-2">
                    <div class="absolute inset-0 bg-gradient-to-t from-black/70 to-transparent z-10"></div>
                    <img src="https://images.pexels.com/photos/50692/brothers-family-siblings-boys-50692.jpeg"
                         alt="Kids Fashion"
                         class="w-full h-full object-cover transform group-hover:scale-105 transition-transform duration-500">
                    <div class="absolute bottom-0 left-0 z-20 p-6 w-full">
                        <h3 class="text-xl font-bold text-white mb-2">Kids Fashion</h3>
                        <a href="@Url.Action("ShopByCategory", "Home", new { area = "Customer", category = "kids-fashion" })" class="inline-flex items-center text-white text-sm font-medium group-hover:text-[#088170] transition-colors duration-300">
                            Shop Now
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1 group-hover:translate-x-1 transition-transform duration-300" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                            </svg>
                        </a>
                    </div>
                </div>

                <!-- 4. Footwear -->
                <div class="group relative overflow-hidden rounded-xl shadow-md hover:shadow-xl transition-all duration-300 h-72 mx-2 my-2">
                    <div class="absolute inset-0 bg-gradient-to-t from-black/70 to-transparent z-10"></div>
                    <img src="https://images.unsplash.com/photo-1460353581641-37baddab0fa2?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=600&q=80"
                         alt="Footwear"
                         class="w-full h-full object-cover transform group-hover:scale-105 transition-transform duration-500">
                    <div class="absolute bottom-0 left-0 z-20 p-6 w-full">
                        <h3 class="text-xl font-bold text-white mb-2">Footwear</h3>
                        <a href="@Url.Action("ShopByCategory", "Home", new { area = "Customer", category = "footwear" })" class="inline-flex items-center text-white text-sm font-medium group-hover:text-[#088170] transition-colors duration-300">
                            Shop Now
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1 group-hover:translate-x-1 transition-transform duration-300" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                            </svg>
                        </a>
                    </div>
                </div>

                <!-- 5. Accessories -->
                <div class="group relative overflow-hidden rounded-xl shadow-md hover:shadow-xl transition-all duration-300 h-72 mx-2 my-2">
                    <div class="absolute inset-0 bg-gradient-to-t from-black/70 to-transparent z-10"></div>
                    <img src="https://images.unsplash.com/photo-1590874103328-eac38a683ce7?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=600&q=80"
                         alt="Accessories"
                         class="w-full h-full object-cover transform group-hover:scale-105 transition-transform duration-500">
                    <div class="absolute bottom-0 left-0 z-20 p-6 w-full">
                        <h3 class="text-xl font-bold text-white mb-2">Accessories</h3>
                        <a href="@Url.Action("ShopByCategory", "Home", new { area = "Customer", category = "accessories" })" class="inline-flex items-center text-white text-sm font-medium group-hover:text-[#088170] transition-colors duration-300">
                            Shop Now
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1 group-hover:translate-x-1 transition-transform duration-300" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                            </svg>
                        </a>
                    </div>
                </div>

                <!-- 6. Sportswear -->
                <div class="group relative overflow-hidden rounded-xl shadow-md hover:shadow-xl transition-all duration-300 h-72 mx-2 my-2">
                    <div class="absolute inset-0 bg-gradient-to-t from-black/70 to-transparent z-10"></div>
                    <img src="https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=600&q=80"
                         alt="Sportswear"
                         class="w-full h-full object-cover transform group-hover:scale-105 transition-transform duration-500">
                    <div class="absolute bottom-0 left-0 z-20 p-6 w-full">
                        <h3 class="text-xl font-bold text-white mb-2">Sportswear</h3>
                        <a href="@Url.Action("ShopByCategory", "Home", new { area = "Customer", category = "sportswear" })" class="inline-flex items-center text-white text-sm font-medium group-hover:text-[#088170] transition-colors duration-300">
                            Shop Now
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1 group-hover:translate-x-1 transition-transform duration-300" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                            </svg>
                        </a>
                    </div>
                </div>

                <!-- 7. Luxury Collection -->
                <div class="group relative overflow-hidden rounded-xl shadow-md hover:shadow-xl transition-all duration-300 h-72 mx-2 my-2">
                    <div class="absolute inset-0 bg-gradient-to-t from-black/70 to-transparent z-10"></div>
                    <img src="https://images.unsplash.com/photo-1551232864-3f0890e580d9?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=600&q=80"
                         alt="Luxury Collection"
                         class="w-full h-full object-cover transform group-hover:scale-105 transition-transform duration-500">
                    <div class="absolute bottom-0 left-0 z-20 p-6 w-full">
                        <h3 class="text-xl font-bold text-white mb-2">Luxury Collection</h3>
                        <a href="@Url.Action("ShopByCategory", "Home", new { area = "Customer", category = "luxury-collection" })" class="inline-flex items-center text-white text-sm font-medium group-hover:text-[#088170] transition-colors duration-300">
                            Shop Now
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1 group-hover:translate-x-1 transition-transform duration-300" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                            </svg>
                        </a>
                    </div>
                </div>

                <!-- 8. Summer Essentials -->
                <div class="group relative overflow-hidden rounded-xl shadow-md hover:shadow-xl transition-all duration-300 h-72 mx-2 my-2">
                    <div class="absolute inset-0 bg-gradient-to-t from-black/70 to-transparent z-10"></div>
                    <img src="https://images.unsplash.com/photo-1558769132-cb1aea458c5e?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=600&q=80"
                         alt="Summer Essentials"
                         class="w-full h-full object-cover transform group-hover:scale-105 transition-transform duration-500">
                    <div class="absolute bottom-0 left-0 z-20 p-6 w-full">
                        <h3 class="text-xl font-bold text-white mb-2">Seasonal Collections</h3>
                        <a href="@Url.Action("ShopByCategory", "Home", new { area = "Customer", category = "summer-essentials" })" class="inline-flex items-center text-white text-sm font-medium group-hover:text-[#088170] transition-colors duration-300">
                            Shop Now
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1 group-hover:translate-x-1 transition-transform duration-300" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                            </svg>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </section>

<!-- Rotating Banner Container -->
<section id="sm-banner" class="px-8 sm:px-12 lg:px-16 py-12 max-w-7xl mx-auto">
    <div class="max-w-7xl mx-auto">
        <div class="grid grid-cols-1 md:grid-cols-3 gap-8">

            <!-- Banner 1: Buy 1 Get 1 Free -->
            <div class="relative overflow-hidden rounded-2xl h-[400px] group">
                <div class="absolute inset-0 bg-[url('https://images.unsplash.com/photo-1539109136881-3be0616acf4b?ixlib=rb-4.0.3&auto=format&fit=crop&w=1740&q=80')] bg-cover bg-center"></div>
                <div class="absolute inset-0 bg-black/30 group-hover:bg-black/40 transition-all duration-500"></div>
                <div class="relative z-10 p-8 h-full flex flex-col justify-center text-white">
                    <span class="text-base font-bold uppercase tracking-widest mb-3">Crazy Deals</span>
                    <h2 class="text-3xl md:text-4xl font-bold mb-4">Buy 1 Get 1 Free</h2>
                    <p class="text-base mb-6 text-[#f0f0f0]">Classic dresses at unbeatable prices</p>
                    <a asp-action="shop" class="bg-white text-gray-900 hover:bg-gray-100 font-medium py-2.5 px-6 rounded-full w-max transition-all shadow-md hover:shadow-lg">
                        Shop Now
                    </a>
                </div>
            </div>

            <!-- Banner 2: Spring Collection (Matching Style) -->
            <div class="relative overflow-hidden rounded-2xl h-[400px] group">
                <div class="absolute inset-0 bg-[url('https://images.unsplash.com/photo-1526047932273-341f2a7631f9?ixlib=rb-4.0.3&auto=format&fit=crop&w=1740&q=80')] bg-cover bg-center"></div>
                <div class="absolute inset-0 bg-[#088170]/70 group-hover:bg-[#088170]/80 transition-all duration-500"></div>
                <div class="relative z-10 p-8 h-full flex flex-col justify-center text-white">
                    <span class="text-base font-bold uppercase tracking-widest mb-3">Seasonal</span>
                    <h2 class="text-3xl md:text-4xl font-bold mb-4">Spring Florals</h2>
                    <p class="text-base mb-6 text-[#f0f0f0]">Fresh patterns for sunny days</p>
                    <a asp-action="shop" class="bg-white text-[#088170] hover:bg-gray-100 font-medium py-2.5 px-6 rounded-full w-max transition-all shadow-md hover:shadow-lg">
                        View Collection
                    </a>
                </div>
            </div>

            <!-- Banner 3: New Arrivals -->
            <div class="relative overflow-hidden rounded-2xl h-[400px] group">
                <div class="absolute inset-0 bg-[url('https://images.unsplash.com/photo-1551232864-3f0890e580d9?ixlib=rb-4.0.3&auto=format&fit=crop&w=1740&q=80')] bg-cover bg-center"></div>
                <div class="absolute inset-0 bg-gray-900/60 group-hover:bg-gray-900/70 transition-all duration-500"></div>
                <div class="relative z-10 p-8 h-full flex flex-col justify-center text-white text-right">
                    <span class="text-base font-bold uppercase tracking-widest mb-3">Just In</span>
                    <h2 class="text-3xl md:text-4xl font-bold mb-4">New Arrivals</h2>
                    <p class="text-base mb-6 text-[#f0f0f0]">Trending styles this season</p>
                    <a asp-action="shop" class="bg-[#088170] hover:bg-[#0a9a85] text-white font-medium py-2.5 px-6 rounded-full w-max ml-auto transition-all shadow-md hover:shadow-lg">
                        Explore
                    </a>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Big Triple Banners with Space -->
<section id="banner3" class="px-8 sm:px-12 lg:px-16 py-12 max-w-7xl mx-auto">
    <div class="max-w-7xl mx-auto">
        <div class="grid grid-cols-1 md:grid-cols-3 gap-8">

            <!-- Seasonal Sale -->
            <div class="relative overflow-hidden rounded-2xl h-80 group">
                <div class="absolute inset-0 bg-[url('https://images.unsplash.com/photo-1600185365483-26d7a4cc7519?ixlib=rb-4.0.3&auto=format&fit=crop&w=1740&q=80')] bg-cover bg-center"></div>
                <div class="absolute inset-0 bg-gradient-to-t from-gray-900/70 to-transparent"></div>
                <div class="relative z-10 p-8 h-full flex flex-col justify-end text-white">
                    <h2 class="text-2xl font-bold uppercase tracking-widest mb-2">Seasonal Sale</h2>
                    <h3 class="text-3xl font-bold">Winter Collection -50% OFF</h3>
                </div>
            </div>

            <!-- Footwear Collection -->
            <div class="relative overflow-hidden rounded-2xl h-80 group">
                <div class="absolute inset-0 bg-[url('https://images.unsplash.com/photo-1460353581641-37baddab0fa2?ixlib=rb-4.0.3&auto=format&fit=crop&w=1740&q=80')] bg-cover bg-center"></div>
                <div class="absolute inset-0 bg-gradient-to-t from-[#088170]/70 to-transparent"></div>
                <div class="relative z-10 p-8 h-full flex flex-col justify-end text-white">
                    <h2 class="text-2xl font-bold uppercase tracking-widest mb-2">New Collection</h2>
                    <h3 class="text-3xl font-bold">Spring/Summer Footwear</h3>
                </div>
            </div>

            <!-- T-Shirts -->
            <div class="relative overflow-hidden rounded-2xl h-80 group">
                <div class="absolute inset-0 bg-[url('https://images.unsplash.com/photo-1576566588028-4147f3842f27?ixlib=rb-4.0.3&auto=format&fit=crop&w=1740&q=80')] bg-cover bg-center"></div>
                <div class="absolute inset-0 bg-gradient-to-t from-gray-900/70 to-transparent"></div>
                <div class="relative z-10 p-8 h-full flex flex-col justify-end text-white">
                    <h2 class="text-2xl font-bold uppercase tracking-widest mb-2">Trending Now</h2>
                    <h3 class="text-3xl font-bold">New Printed T-Shirts</h3>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Newsletter Section -->
<section id="newsletter" class="px-8 sm:px-12 lg:px-16 py-12 bg-[#aeccc5] flex flex-wrap justify-between items-center max-w-7xl mx-auto mt-6 mb-6">
    <div class="max-w-7xl mx-auto flex flex-wrap justify-between items-center w-full">
        <div class="newstext flex items-center space-x-12">
            <div class="flex items-center space-x-2">
                <i class="fas fa-envelope text-[#1B201E] text-[22px]"></i>
                <h4 class="text-[22px] font-bold text-[#1B201E]">Sign Up for Newsletter</h4>
            </div>
            <p class="text-sm text-[#1B201E] font-semibold">Get <span class="text-[#ffbd27]">20% Off</span> Your First Order!</p>
        </div>
        <div class="form flex items-center w-full sm:w-auto">
            <div class="relative w-full sm:w-64">
                <input type="text" placeholder="Your Email Address" class="w-full h-12 px-4 pr-10 text-sm border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-[#212529] focus:border-transparent">
                <span class="absolute right-4 top-1/2 transform -translate-y-1/2 text-gray-500">
                    <i class="fas fa-envelope"></i>
                </span>
            </div>
            <button class="normal bg-[#212529] text-white px-6 py-3 rounded-full ml-2 hover:bg-[#333] transition-all duration-300">Sign Up</button>
        </div>
    </div>
</section>

<!-- Back to Top Button -->
<button class="back-to-top" title="Go to top">
    <i class="fas fa-arrow-up"></i>
</button>
</div>


<script>
        // Notification System
        function showNotification(isSuccess, message) {
            const notificationContainer = document.querySelector('.notification-container');
            const notificationId = 'notification-' + Date.now();
            const notificationClass = isSuccess ? 'success' : 'error';
            const iconClass = isSuccess ? 'fa-check-circle' : 'fa-exclamation-circle';
            const duration = isSuccess ? 3000 : 5000;

            const notificationHTML = `
                <div id="${notificationId}" class="notification ${notificationClass}">
                    <i class="fas ${iconClass} notification-icon"></i>
                    <span>${message}</span>
                    <span class="notification-close" onclick="hideNotification('${notificationId}')">
                        <i class="fas fa-times"></i>
                    </span>
                    <div class="notification-progress">
                        <div class="notification-progress-bar"></div>
                    </div>
                </div>
            `;

            notificationContainer.insertAdjacentHTML('afterbegin', notificationHTML);
            const notification = document.getElementById(notificationId);
            const progressBar = notification.querySelector('.notification-progress-bar');

            setTimeout(() => {
                notification.classList.add('show');
                positionNotifications();
            }, 100);

            setTimeout(() => {
                hideNotification(notificationId);
            }, duration);

            notification.addEventListener('mouseenter', () => {
                progressBar.style.animationPlayState = 'paused';
            });

            notification.addEventListener('mouseleave', () => {
                progressBar.style.animationPlayState = 'running';
            });
        }

        function positionNotifications() {
            const notifications = document.querySelectorAll('.notification.show');
            notifications.forEach((notification, index) => {
                notification.style.top = `${index * (notification.offsetHeight + 10)}px`;
            });
        }

        window.hideNotification = function(id) {
            const notification = document.getElementById(id);
            if (notification) {
                notification.classList.remove('show');
                notification.classList.add('hide');
                setTimeout(() => notification.remove(), 500);
            }
        };

        // Size and Quantity Modal
        let currentProductId = null;
        let selectedSize = null;
        let maxQuantity = 10;

        function showSizeModal(productId) {
            currentProductId = productId;
            selectedSize = null;
            document.getElementById('quantityInput').value = 1;
            document.getElementById('confirmAddToCart').disabled = true;
            document.getElementById('stockInfo').textContent = '';

            const sizeOptionsContainer = document.getElementById('sizeOptionsContainer');
            sizeOptionsContainer.innerHTML = '<p>Loading sizes...</p>';

            document.getElementById('sizeModal').classList.add('active');

            fetch(`/Customer/Home/GetProductSizes?productId=${productId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        updateSizeOptions(data.sizes);
                    } else {
                        sizeOptionsContainer.innerHTML = `<p>${data.message || 'No sizes available'}</p>`;
                    }
                })
                .catch(error => {
                    sizeOptionsContainer.innerHTML = '<p>Error loading sizes</p>';
                    console.error('Error:', error);
                });
        }

        function updateSizeOptions(availableSizes) {
            const sizeOptionsContainer = document.getElementById('sizeOptionsContainer');
            sizeOptionsContainer.innerHTML = '';

            if (!availableSizes || availableSizes.length === 0) {
                sizeOptionsContainer.innerHTML = '<p>Currently out of stock</p>';
                return;
            }

            const allSizes = ['S', 'M', 'L', 'XL', 'XXL', 'XXXL'];
            allSizes.forEach(size => {
                const isAvailable = availableSizes.includes(size);
                const sizeOption = document.createElement('div');
                sizeOption.className = `size-option ${isAvailable ? '' : 'disabled'}`;
                sizeOption.textContent = size;
                sizeOption.dataset.size = size;

                if (isAvailable) {
                    sizeOption.addEventListener('click', function() {
                        document.querySelectorAll('.size-option').forEach(opt => opt.classList.remove('active'));
                        this.classList.add('active');
                        selectedSize = this.dataset.size;
                        document.getElementById('confirmAddToCart').disabled = false;
                        maxQuantity = 10;
                        document.getElementById('quantityInput').max = maxQuantity;
                        document.getElementById('stockInfo').textContent = `Max ${maxQuantity} available`;
                    });
                }

                sizeOptionsContainer.appendChild(sizeOption);
            });
        }

        function hideSizeModal() {
            document.getElementById('sizeModal').classList.remove('active');
        }

        document.getElementById('incrementQty').addEventListener('click', function() {
            const quantityInput = document.getElementById('quantityInput');
            let currentValue = parseInt(quantityInput.value);
            if (currentValue < maxQuantity) {
                quantityInput.value = currentValue + 1;
            }
        });

        document.getElementById('decrementQty').addEventListener('click', function() {
            const quantityInput = document.getElementById('quantityInput');
            let currentValue = parseInt(quantityInput.value);
            if (currentValue > 1) {
                quantityInput.value = currentValue - 1;
            }
        });

        document.getElementById('quantityInput').addEventListener('change', function() {
            let value = parseInt(this.value);
            if (isNaN(value) || value < 1) {
                this.value = 1;
            } else if (value > maxQuantity) {
                this.value = maxQuantity;
            }
        });

        document.getElementById('confirmAddToCart').addEventListener('click', function() {
            if (currentProductId && selectedSize) {
                const quantity = parseInt(document.getElementById('quantityInput').value) || 1;
                document.getElementById(`size-${currentProductId}`).value = selectedSize;
                document.getElementById(`quantity-${currentProductId}`).value = quantity;

                const form = document.querySelector(`.add-to-cart-form[data-product-id="${currentProductId}"]`);
                const formData = new FormData(form);

                hideSizeModal();

                fetch('@Url.Action("AddToCart", "Cart", new { area = "Customer" })', {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    showNotification(data.success, data.message || (data.success ? "Item added to cart" : "Failed to add item"));
                    if (data.success) {
                        const cartButton = document.querySelector(`.pro-cart-button[onclick*="${currentProductId}"]`);
                        if (cartButton) {
                            cartButton.classList.add('bounce-effect');
                            setTimeout(() => cartButton.classList.remove('bounce-effect'), 1000);
                        }
                        if (data.cartCount !== undefined) {
                            updateCartCount(data.cartCount);
                        }
                    }
                })
                .catch(error => {
                    showNotification(false, "You must log in to add items to cart");
                });
            }
        });

        function updateCartCount(count) {
            const cartCountElement = document.querySelector('.cart-count');
            if (cartCountElement) {
                cartCountElement.textContent = count;
                cartCountElement.style.display = count > 0 ? 'inline-block' : 'none';
            }
        }

        document.getElementById('sizeModal').addEventListener('click', function(e) {
            if (e.target === this) {
                hideSizeModal();
            }
        });

        // Quick View Modal
        let selectedQuickViewSize = null;

        function showQuickViewModal(productId) {
            fetch(`/Customer/Home/GetProductDetails?productId=${productId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const product = data.product;
                        document.getElementById('quickViewProductName').textContent = product.productName || 'Product Name';
                        document.getElementById('quickViewProductImage').src = product.imgUrl || 'https://via.placeholder.com/300';
                        document.getElementById('quickViewPrice').textContent = `$${parseFloat(product.productPrice || 0).toFixed(2)}`;
                        document.getElementById('quickViewDescription').textContent = product.description || 'No description available';

                        const ratingContainer = document.getElementById('quickViewRating');
                        const rating = product.productRating || 0;
                        ratingContainer.innerHTML = Array(5).fill().map((_, i) =>
                            i < rating ? '<i class="fas fa-star"></i>' : '<i class="far fa-star"></i>'
                        ).join('');

                        const quantityInput = document.getElementById('quickViewQuantityInput');
                        quantityInput.value = 1;

                        const sizes = product.availableSizes || ['S', 'M', 'L'];
                        const sizeContainer = document.getElementById('quickViewSizes');
                        sizeContainer.innerHTML = sizes.map(size => `
                            <div class="size-option" data-size="${size}">${size}</div>
                        `).join('');
                        const firstSizeOption = sizeContainer.querySelector('.size-option');
                        if (firstSizeOption) {
                            firstSizeOption.classList.add('selected');
                            selectedQuickViewSize = firstSizeOption.dataset.size;
                        }

                        document.querySelectorAll('#quickViewSizes .size-option').forEach(option => {
                            option.addEventListener('click', function() {
                                document.querySelectorAll('#quickViewSizes .size-option').forEach(opt => opt.classList.remove('selected'));
                                this.classList.add('selected');
                                selectedQuickViewSize = this.dataset.size;
                            });
                        });

                        const incrementBtn = document.getElementById('quickViewIncrementQty');
                        const decrementBtn = document.getElementById('quickViewDecrementQty');
                        const newIncrementBtn = incrementBtn.cloneNode(true);
                        const newDecrementBtn = decrementBtn.cloneNode(true);
                        incrementBtn.parentNode.replaceChild(newIncrementBtn, incrementBtn);
                        decrementBtn.parentNode.replaceChild(newDecrementBtn, decrementBtn);

                        newIncrementBtn.addEventListener('click', function() {
                            let currentValue = parseInt(quantityInput.value);
                            if (currentValue < 10) {
                                quantityInput.value = currentValue + 1;
                            }
                        });

                        newDecrementBtn.addEventListener('click', function() {
                            let currentValue = parseInt(quantityInput.value);
                            if (currentValue > 1) {
                                quantityInput.value = currentValue - 1;
                            }
                        });

                        document.getElementById('quickViewAddToCart').onclick = () => addToCartFromQuickView(productId);

                        document.getElementById('quickViewModal').classList.add('active');
                    } else {
                        showNotification(false, 'Failed to load product details: ' + data.message);
                    }
                })
                .catch(error => {
                    showNotification(false, 'Error loading product details');
                    console.error('Fetch error:', error);
                });
        }

        function hideQuickViewModal() {
            document.getElementById('quickViewModal').classList.remove('active');
        }

        function addToCartFromQuickView(productId) {
            if (!selectedQuickViewSize) {
                showNotification(false, "Please select a size");
                return;
            }

            const quantity = parseInt(document.getElementById('quickViewQuantityInput').value) || 1;
            const form = document.querySelector(`.add-to-cart-form[data-product-id="${productId}"]`);

            if (!form) {
                showNotification(false, "Error: Product form not found");
                return;
            }

            const formData = new FormData(form);
            formData.set('size', selectedQuickViewSize);
            formData.set('quantity', quantity);

            fetch('@Url.Action("AddToCart", "Cart", new { area = "Customer" })', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                showNotification(data.success, data.message || (data.success ? "Item added to cart" : "Product not found or failed to add item"));
                if (data.success) {
                    const cartButton = document.querySelector(`.pro-cart-button[onclick*="${productId}"]`);
                    if (cartButton) {
                        cartButton.classList.add('bounce-effect');
                        setTimeout(() => cartButton.classList.remove('bounce-effect'), 1000);
                    }
                    if (data.cartCount !== undefined) {
                        updateCartCount(data.cartCount);
                    }
                    hideQuickViewModal();
                }
            })
            .catch(error => {
                showNotification(false, "You must log in to add items to cart");
                console.error('Error adding to cart:', error);
            });
        }

        // New Arrivals Slider
        document.addEventListener('DOMContentLoaded', function() {
            const productsContainer = document.getElementById('productsContainer');
            const prevButton = document.getElementById('prevProduct');
            const nextButton = document.getElementById('nextProduct');
            let products;

            try {
                products = JSON.parse(productsContainer.dataset.products || '[]');
            } catch (e) {
                console.error('JSON Parse Error:', e);
                productsContainer.innerHTML = '<p class="text-center text-gray-500">Error loading products.</p>';
                products = [];
                return;
            }

            let currentStartIndex = 0;
            let interval;
            let isTransitioning = false;
            let isDragging = false;
            let startX = 0;
            let currentTranslate = 0;
            let prevTranslate = 0;

            productsContainer.style.willChange = 'transform';
            productsContainer.style.backfaceVisibility = 'hidden';
            productsContainer.style.transition = 'transform 0.8s ease-in-out';

            function getCardWidth() {
                const screenWidth = window.innerWidth;
                if (screenWidth <= 480) return Math.min(document.querySelector('#productsWrapper').offsetWidth - 16, 250 + 8);
                if (screenWidth <= 768) return 180 + 16;
                if (screenWidth <= 1280) return 220 + 16;
                return 250 + 16;
            }

            function createProductCard(product) {
                const card = document.createElement('div');
                card.className = 'pro group cursor-pointer relative';
                const cardWidth = getCardWidth() - 16;
                card.style.width = `${cardWidth}px`;

                const productId = product.product_Id || 0;
                const productName = product.product_Name || 'Unnamed Product';
                const brandName = product.brandName || 'Unknown Brand';
                const price = product.product_Price ? Number(product.product_Price).toFixed(2) : '0.00';
                const rating = product.product_Rating || 0;
                const imgUrl = product.imgUrl || '/img/placeholder.jpg';

                card.innerHTML = `
                    <div class="relative overflow-hidden rounded-2xl">
                        <img src="${imgUrl}" alt="${productName}" class="product-img w-full h-auto object-cover transition-transform duration-700 group-hover:scale-110">
                        <span class="absolute top-2 left-2 bg-[#FF6B6B] text-white text-xs font-bold px-2 py-1 rounded-full shadow-sm">NEW</span>
                        <div class="icon-overlay">
                            <button onclick="event.stopPropagation(); showQuickViewModal(${productId});">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                    </div>
                    <div class="des p-3">
                        <span class="product-brand text-sm">${brandName}</span>
                        <h5 class="product-description text-base font-medium">${productName}</h5>
                        <div class="star flex items-center">
                            ${'<i class="fas fa-star text-yellow-400 text-xs"></i>'.repeat(rating)}
                            ${'<i class="far fa-star text-yellow-400 text-xs"></i>'.repeat(5 - rating)}
                        </div>
                        <h4 class="product-price text-lg font-semibold">$${price}</h4>
                    </div>
                    <div class="pro-cart-button absolute bottom-3 right-3" onclick="event.stopPropagation(); showSizeModal(${productId})">
                        <i class="fas fa-shopping-cart text-[#088178]"></i>
                    </div>
                    <form class="add-to-cart-form" data-product-id="${productId}" style="display: none;">
                        <input type="hidden" name="__RequestVerificationToken" value="${document.querySelector('input[name="__RequestVerificationToken"]').value || ''}" />
                        <input type="hidden" name="productId" value="${productId}" />
                        <input type="hidden" name="quantity" id="quantity-${productId}" value="1" />
                        <input type="hidden" name="size" id="size-${productId}" value="" />
                    </form>
                `;
                card.addEventListener('click', (e) => {
                    if (!e.target.closest('.pro-cart-button') && !e.target.closest('.icon-overlay')) {
                        window.location.href = `/Customer/Home/Details/${productId}`;
                    }
                });
                return card;
            }

            productsContainer.innerHTML = '';
            if (products.length) {
                for (let i = 0; i < products.length * 3; i++) {
                    const idx = i % products.length;
                    const card = createProductCard(products[idx]);
                    productsContainer.appendChild(card);
                }
            } else {
                productsContainer.innerHTML = '<p class="text-center text-gray-500">No new arrivals available.</p>';
            }

            const cardWidth = getCardWidth();
            currentTranslate = -cardWidth * products.length;
            prevTranslate = currentTranslate;
            if (products.length) {
                productsContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
            }

            function updateSliderPosition(direction = 'next') {
                if (isTransitioning || !products.length) return;
                isTransitioning = true;
                const cardWidth = getCardWidth();
                if (direction === 'next') {
                    currentStartIndex = (currentStartIndex + 1) % products.length;
                    currentTranslate -= cardWidth;
                } else {
                    currentStartIndex = (currentStartIndex - 1 + products.length) % products.length;
                    currentTranslate += cardWidth;
                }
                productsContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
                setTimeout(() => {
                    const limit = cardWidth * products.length * 2;
                    if (Math.abs(currentTranslate) >= limit || currentTranslate >= 0) {
                        currentTranslate = -cardWidth * products.length;
                        productsContainer.style.transition = 'none';
                        productsContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
                        setTimeout(() => {
                            productsContainer.style.transition = 'transform 0.8s ease-in-out';
                        }, 50);
                    }
                    isTransitioning = false;
                }, 800);
            }

            function cycleCards(direction = 'next') {
                updateSliderPosition(direction);
            }

            if (products.length) {
                interval = setInterval(() => cycleCards('next'), 3500);
            }

            nextButton.addEventListener('click', () => {
                if (isTransitioning || !products.length) return;
                clearInterval(interval);
                cycleCards('next');
                interval = setInterval(() => cycleCards('next'), 3500);
            });

            prevButton.addEventListener('click', () => {
                if (isTransitioning || !products.length) return;
                clearInterval(interval);
                cycleCards('prev');
                interval = setInterval(() => cycleCards('next'), 3500);
            });

            productsContainer.addEventListener('mouseenter', () => clearInterval(interval));
            productsContainer.addEventListener('mouseleave', () => {
                if (!isDragging && products.length) {
                    interval = setInterval(() => cycleCards('next'), 3500);
                }
            });

            let animationFrameId;
            function startDrag(e) {
                if (!products.length) return;
                isDragging = true;
                startX = (e.type === 'touchstart' ? e.touches[0].pageX : e.pageX) - currentTranslate;
                productsContainer.style.cursor = 'grabbing';
                clearInterval(interval);
                cancelAnimationFrame(animationFrameId);
            }

            function moveDrag(e) {
                if (!isDragging) return;
                e.preventDefault();
                cancelAnimationFrame(animationFrameId);
                animationFrameId = requestAnimationFrame(() => {
                    const x = (e.type === 'touchmove' ? e.touches[0].pageX : e.pageX) - startX;
                    currentTranslate = x;
                    productsContainer.style.transition = 'none';
                    productsContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
                });
            }

            function endDrag() {
                if (!isDragging) return;
                isDragging = false;
                productsContainer.style.cursor = 'pointer';
                productsContainer.style.transition = 'transform 0.5s ease-in-out';
                const cardWidth = getCardWidth();
                const threshold = cardWidth / 2;
                const draggedDistance = currentTranslate - prevTranslate;
                if (Math.abs(draggedDistance) > threshold) {
                    cycleCards(draggedDistance < 0 ? 'next' : 'prev');
                } else {
                    productsContainer.style.transform = `translate3d(${prevTranslate}px, 0, 0)`;
                    isTransitioning = false;
                }
                prevTranslate = currentTranslate;
                if (products.length) {
                    interval = setInterval(() => cycleCards('next'), 3500);
                }
            }

            productsContainer.addEventListener('mousedown', startDrag);
            productsContainer.addEventListener('mousemove', moveDrag);
            productsContainer.addEventListener('mouseup', endDrag);
            productsContainer.addEventListener('mouseleave', endDrag);
            productsContainer.addEventListener('touchstart', startDrag);
            productsContainer.addEventListener('touchmove', moveDrag);
            productsContainer.addEventListener('touchend', endDrag);
            productsContainer.addEventListener('selectstart', (e) => e.preventDefault());

            window.addEventListener('resize', () => {
                if (!products.length) return;
                const cardWidth = getCardWidth();
                currentTranslate = -cardWidth * products.length;
                prevTranslate = currentTranslate;
                productsContainer.style.transition = 'none';
                productsContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
                Array.from(productsContainer.children).forEach(card => {
                    card.style.width = `${cardWidth - 16}px`;
                });
                setTimeout(() => {
                    productsContainer.style.transition = 'transform 0.8s ease-in-out';
                }, 50);
            });

            // Initialize cart button event listeners
            document.querySelectorAll('.pro-cart-button').forEach(button => {
                button.addEventListener('click', function(e) {
                    e.stopPropagation();
                    const productId = this.getAttribute('onclick').match(/\d+/)[0];
                    showSizeModal(productId);
                });
            });

            // Show initial notifications
    @if (showSuccessMessage)
    {
        @:showNotification(true, "Item added to cart successfully!");
    }
    @if (showErrorMessage)
    {
        @:showNotification(false, "@errorMessage");
    }
        });
 // Popular Brands Slider
        document.addEventListener('DOMContentLoaded', function () {
            const brandsContainer = document.getElementById('brandsContainer');
            const prevButton = document.getElementById('prevBrand');
            const nextButton = document.getElementById('nextBrand');
            let brands;

            console.log('Raw data-brands:', brandsContainer.dataset.brands);
            try {
                brands = JSON.parse(brandsContainer.dataset.brands || '[]');
                console.log('Parsed brands:', brands);
                console.log('Unique brands:', [...new Set(brands.map(b => b.Name))]);
            } catch (e) {
                console.error('JSON Parse Error:', e, 'Raw Data:', brandsContainer.dataset.brands);
                brands = [
                    { Name: "Nike", ImgUrl: "/img/brands/nike.webp", Link: "/Customer/Home/ShopByBrand?brand=nike" },
                    { Name: "Adidas", ImgUrl: "/img/brands/adidas.jpeg", Link: "/Customer/Home/ShopByBrand?brand=adidas" },
                    { Name: "Puma", ImgUrl: "/img/brands/puma.jpg", Link: "/Customer/Home/ShopByBrand?brand=puma" },
                    { Name: "Zara", ImgUrl: "/img/brands/zara.jpeg", Link: "/Customer/Home/ShopByBrand?brand=zara" },
                    { Name: "H&M", ImgUrl: "/img/brands/hm.jpg", Link: "/Customer/Home/ShopByBrand?brand=hm" },
                    { Name: "Levi's", ImgUrl: "/img/brands/levis.jpg", Link: "/Customer/Home/ShopByBrand?brand=levis" },
                    { Name: "NightBird", ImgUrl: "/img/brands/nightbird.jpg", Link: "/Customer/Home/ShopByBrand?brand=nightbird" },
                    { Name: "Local Brands", ImgUrl: "/img/brands/local.webp", Link: "/Customer/Home/ShopByBrand?brand=local" }
                ];
                console.log('Using hardcoded brands:', brands);
            }

            if (!brands.length) {
                console.warn('No brands data available.');
                brandsContainer.innerHTML = '<p class="text-center text-gray-500">No brands available.</p>';
                return;
            }

            let currentStartIndex = 0;
            let interval;
            let isTransitioning = false;
            let isDragging = false;
            let startX = 0;
            let currentTranslate = 0;
            let prevTranslate = 0;

            function isMobileView() {
                return window.innerWidth <= 768;
            }

            function getCardWidth() {
                const screenWidth = window.innerWidth;
                if (screenWidth <= 480) return isMobileView() ? 'calc(50% - 0.5rem)' : Math.min(document.querySelector('#brandsWrapper').offsetWidth - 16, 300 + 8);
                if (screenWidth <= 768) return isMobileView() ? 'calc(50% - 0.5rem)' : 140 + 16;
                if (screenWidth <= 1280) return 180 + 16;
                return 200 + 16;
            }

            function getVisibleCards() {
                const screenWidth = window.innerWidth;
                if (screenWidth <= 480) return isMobileView() ? brands.length : 1;
                if (screenWidth <= 768) return isMobileView() ? brands.length : 3.5;
                if (screenWidth <= 1280) return 5;
                return 6;
            }

            function createBrandCard(brand, isMobile = false) {
                console.log('Creating card for brand:', brand.Name, 'with link:', brand.Link);
                const card = document.createElement('div');
                card.className = 'category-card group cursor-pointer';
                card.style.willChange = isMobile ? 'auto' : 'transform';
                card.style.backfaceVisibility = isMobile ? 'visible' : 'hidden';
                if (!isMobile) {
                    card.style.width = (getCardWidth() - 16) + 'px';
                }
                card.innerHTML = `
                    <a href="${brand.Link || '#'}" class="absolute inset-0 z-10"></a>
                    <div class="relative overflow-hidden rounded-2xl">
                        <img src="${brand.ImgUrl || '/img/brands/default.jpg'}" loading="lazy" alt="${brand.Name || 'Brand'}" class="w-full h-auto object-cover transition-transform duration-700 group-hover:scale-110">
                    </div>
                    <h4 class="category-name">${brand.Name || 'Unknown Brand'}</h4>
                `;
                return card;
            }

            function initializeBrands() {
                const isMobile = isMobileView();
                brandsContainer.innerHTML = '';
                brandsContainer.style.transform = 'none';
                brandsContainer.style.transition = 'none';
                clearInterval(interval);

                if (brands.length) {
                    const uniqueBrands = [...new Map(brands.map(b => [b.Name, b])).values()];
                    if (isMobile) {
                        // Grid layout: show all brands
                        uniqueBrands.forEach(brand => {
                            const card = createBrandCard(brand, true);
                            brandsContainer.appendChild(card);
                        });
                    } else {
                        // Slider layout: triplicate for infinite scroll
                        for (let i = 0; i < uniqueBrands.length * 3; i++) {
                            const idx = i % uniqueBrands.length;
                            const card = createBrandCard(uniqueBrands[idx]);
                            brandsContainer.appendChild(card);
                        }
                        const cardWidth = getCardWidth();
                        currentTranslate = -cardWidth * uniqueBrands.length;
                        prevTranslate = currentTranslate;
                        brandsContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
                        brandsContainer.style.transition = 'transform 0.8s ease-in-out';
                        startAutoSlide();
                    }
                } else {
                    brandsContainer.innerHTML = '<p class="text-center text-gray-500">No brands available.</p>';
                }
            }

            function updateSliderPosition(direction = 'next') {
                if (isTransitioning || !brands.length || isMobileView()) return;
                isTransitioning = true;
                const cardWidth = getCardWidth();
                if (direction === 'next') {
                    currentStartIndex = (currentStartIndex + 1) % brands.length;
                    currentTranslate -= cardWidth;
                } else {
                    currentStartIndex = (currentStartIndex - 1 + brands.length) % brands.length;
                    currentTranslate += cardWidth;
                }
                brandsContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
                setTimeout(() => {
                    const limit = cardWidth * brands.length * 2;
                    if (Math.abs(currentTranslate) >= limit || currentTranslate >= 0) {
                        currentTranslate = -cardWidth * brands.length;
                        brandsContainer.style.transition = 'none';
                        brandsContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
                        setTimeout(() => {
                            brandsContainer.style.transition = 'transform 0.8s ease-in-out';
                        }, 50);
                    }
                    isTransitioning = false;
                }, 800);
            }

            function cycleCards(direction = 'next') {
                updateSliderPosition(direction);
            }

            function startAutoSlide() {
                if (brands.length && !isMobileView()) {
                    clearInterval(interval);
                    interval = setInterval(() => cycleCards('next'), 3500);
                }
            }

            // Initialize brands based on initial viewport
            initializeBrands();

            if (!isMobileView()) {
                nextButton.addEventListener('click', () => {
                    if (isTransitioning || !brands.length) return;
                    clearInterval(interval);
                    cycleCards('next');
                    startAutoSlide();
                });

                prevButton.addEventListener('click', () => {
                    if (isTransitioning || !brands.length) return;
                    clearInterval(interval);
                    cycleCards('prev');
                    startAutoSlide();
                });

                brandsContainer.addEventListener('mouseenter', () => clearInterval(interval));
                brandsContainer.addEventListener('mouseleave', () => {
                    if (!isDragging && brands.length) {
                        startAutoSlide();
                    }
                });

                let animationFrameId;
                function startDrag(e) {
                    if (!brands.length || isMobileView()) return;
                    isDragging = true;
                    startX = (e.type === 'touchstart' ? e.touches[0].pageX : e.pageX) - currentTranslate;
                    brandsContainer.style.cursor = 'grabbing';
                    clearInterval(interval);
                    cancelAnimationFrame(animationFrameId);
                }

                function moveDrag(e) {
                    if (!isDragging || isMobileView()) return;
                    e.preventDefault();
                    cancelAnimationFrame(animationFrameId);
                    animationFrameId = requestAnimationFrame(() => {
                        const x = (e.type === 'touchmove' ? e.touches[0].pageX : e.pageX) - startX;
                        currentTranslate = x;
                        brandsContainer.style.transition = 'none';
                        brandsContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
                    });
                }

                function endDrag() {
                    if (!isDragging || isMobileView()) return;
                    isDragging = false;
                    brandsContainer.style.cursor = 'pointer';
                    brandsContainer.style.transition = 'transform 0.5s ease-in-out';
                    const cardWidth = getCardWidth();
                    const threshold = cardWidth / 2;
                    const draggedDistance = currentTranslate - prevTranslate;
                    if (Math.abs(draggedDistance) > threshold) {
                        cycleCards(draggedDistance < 0 ? 'next' : 'prev');
                    } else {
                        brandsContainer.style.transform = `translate3d(${prevTranslate}px, 0, 0)`;
                        isTransitioning = false;
                    }
                    prevTranslate = currentTranslate;
                    startAutoSlide();
                }

                brandsContainer.addEventListener('mousedown', startDrag);
                brandsContainer.addEventListener('mousemove', moveDrag);
                brandsContainer.addEventListener('mouseup', endDrag);
                brandsContainer.addEventListener('mouseleave', endDrag);
                brandsContainer.addEventListener('touchstart', startDrag);
                brandsContainer.addEventListener('touchmove', moveDrag);
                brandsContainer.addEventListener('touchend', endDrag);
                brandsContainer.addEventListener('selectstart', (e) => e.preventDefault());
            }

            window.addEventListener('resize', () => {
                if (!brands.length) return;
                initializeBrands();
            });
        });
// Popular Categories Slider
        document.addEventListener('DOMContentLoaded', function () {
            const categoriesContainer = document.getElementById('categoriesContainer');
            const prevButton = document.getElementById('prevCategory');
            const nextButton = document.getElementById('nextCategory');
            let categories;

            console.log('Raw data-categories:', categoriesContainer.dataset.categories);
            try {
                categories = JSON.parse(categoriesContainer.dataset.categories || '[]');
                console.log('Unique categories:', [...new Set(categories.map(c => c.Name))]);
            } catch (e) {
                console.error('JSON Parse Error:', e, 'Raw Data:', categoriesContainer.dataset.categories);
                categories = [];
            }

            let currentStartIndex = 0;
            let interval;
            let isTransitioning = false;
            let isDragging = false;
            let startX = 0;
            let currentTranslate = 0;
            let prevTranslate = 0;

            function isMobileView() {
                return window.innerWidth <= 768;
            }

            function getCardWidth() {
                const screenWidth = window.innerWidth;
                if (screenWidth <= 480) return isMobileView() ? 'calc(50% - 0.5rem)' : Math.min(document.querySelector('#categoriesWrapper').offsetWidth - 16, 300 + 8);
                if (screenWidth <= 768) return isMobileView() ? 'calc(50% - 0.5rem)' : 140 + 16;
                if (screenWidth <= 1280) return 180 + 16;
                return 200 + 16;
            }

            function getVisibleCards() {
                const screenWidth = window.innerWidth;
                if (screenWidth <= 480) return isMobileView() ? categories.length : 1;
                if (screenWidth <= 768) return isMobileView() ? categories.length : 3.5;
                if (screenWidth <= 1280) return 5;
                return 6;
            }

            function createCategoryCard(category, isMobile = false) {
                const card = document.createElement('div');
                card.className = 'category-card group cursor-pointer';
                card.style.willChange = isMobile ? 'auto' : 'transform';
                card.style.backfaceVisibility = isMobile ? 'visible' : 'hidden';
                if (!isMobile) {
                    card.style.width = (getCardWidth() - 16) + 'px';
                }
                card.innerHTML = `
                    <a href="${category.Link || '#'}" class="absolute inset-0 z-10"></a>
                    <div class="relative overflow-hidden rounded-2xl">
                        <img src="${category.ImgUrl || '/img/categories/default.jpg'}" loading="lazy" alt="${category.Name || 'Category'}" class="w-full h-auto object-cover transition-transform duration-700 group-hover:scale-110">
                    </div>
                    <h4 class="category-name">${category.Name || 'Unknown Category'}</h4>
                `;
                return card;
            }

            function initializeCategories() {
                const isMobile = isMobileView();
                categoriesContainer.innerHTML = '';
                categoriesContainer.style.transform = 'none';
                categoriesContainer.style.transition = 'none';
                clearInterval(interval);

                if (categories.length) {
                    const uniqueCategories = [...new Map(categories.map(c => [c.Name, c])).values()];
                    if (isMobile) {
                        // Grid layout: show all categories
                        uniqueCategories.forEach(category => {
                            const card = createCategoryCard(category, true);
                            categoriesContainer.appendChild(card);
                        });
                    } else {
                        // Slider layout: triplicate for infinite scroll
                        for (let i = 0; i < uniqueCategories.length * 3; i++) {
                            const idx = i % uniqueCategories.length;
                            const card = createCategoryCard(uniqueCategories[idx]);
                            categoriesContainer.appendChild(card);
                        }
                        const cardWidth = getCardWidth();
                        currentTranslate = -cardWidth * uniqueCategories.length;
                        prevTranslate = currentTranslate;
                        categoriesContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
                        categoriesContainer.style.transition = 'transform 0.8s ease-in-out';
                        startAutoSlide();
                    }
                } else {
                    categoriesContainer.innerHTML = '<p class="text-center text-gray-500">No categories available.</p>';
                }
            }

            function updateSliderPosition(direction = 'next') {
                if (isTransitioning || !categories.length || isMobileView()) return;
                isTransitioning = true;
                const cardWidth = getCardWidth();
                if (direction === 'next') {
                    currentStartIndex = (currentStartIndex + 1) % categories.length;
                    currentTranslate -= cardWidth;
                } else {
                    currentStartIndex = (currentStartIndex - 1 + categories.length) % categories.length;
                    currentTranslate += cardWidth;
                }
                categoriesContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
                setTimeout(() => {
                    const limit = cardWidth * categories.length * 2;
                    if (Math.abs(currentTranslate) >= limit || currentTranslate >= 0) {
                        currentTranslate = -cardWidth * categories.length;
                        categoriesContainer.style.transition = 'none';
                        categoriesContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
                        setTimeout(() => {
                            categoriesContainer.style.transition = 'transform 0.8s ease-in-out';
                        }, 50);
                    }
                    isTransitioning = false;
                }, 800);
            }

            function cycleCards(direction = 'next') {
                updateSliderPosition(direction);
            }

            function startAutoSlide() {
                if (categories.length && !isMobileView()) {
                    clearInterval(interval);
                    interval = setInterval(() => cycleCards('next'), 3500);
                }
            }

            // Initialize categories based on initial viewport
            initializeCategories();

            if (!isMobileView()) {
                nextButton.addEventListener('click', () => {
                    if (isTransitioning || !categories.length) return;
                    clearInterval(interval);
                    cycleCards('next');
                    startAutoSlide();
                });

                prevButton.addEventListener('click', () => {
                    if (isTransitioning || !categories.length) return;
                    clearInterval(interval);
                    cycleCards('prev');
                    startAutoSlide();
                });

                categoriesContainer.addEventListener('mouseenter', () => clearInterval(interval));
                categoriesContainer.addEventListener('mouseleave', () => {
                    if (!isDragging && categories.length) {
                        startAutoSlide();
                    }
                });

                let animationFrameId;
                function startDrag(e) {
                    if (!categories.length || isMobileView()) return;
                    isDragging = true;
                    startX = (e.type === 'touchstart' ? e.touches[0].pageX : e.pageX) - currentTranslate;
                    categoriesContainer.style.cursor = 'grabbing';
                    clearInterval(interval);
                    cancelAnimationFrame(animationFrameId);
                }

                function moveDrag(e) {
                    if (!isDragging || isMobileView()) return;
                    e.preventDefault();
                    cancelAnimationFrame(animationFrameId);
                    animationFrameId = requestAnimationFrame(() => {
                        const x = (e.type === 'touchmove' ? e.touches[0].pageX : e.pageX) - startX;
                        currentTranslate = x;
                        categoriesContainer.style.transition = 'none';
                        categoriesContainer.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
                    });
                }

                function endDrag() {
                    if (!isDragging || isMobileView()) return;
                    isDragging = false;
                    categoriesContainer.style.cursor = 'pointer';
                    categoriesContainer.style.transition = 'transform 0.5s ease-in-out';
                    const cardWidth = getCardWidth();
                    const threshold = cardWidth / 2;
                    const draggedDistance = currentTranslate - prevTranslate;
                    if (Math.abs(draggedDistance) > threshold) {
                        cycleCards(draggedDistance < 0 ? 'next' : 'prev');
                    } else {
                        categoriesContainer.style.transform = `translate3d(${prevTranslate}px, 0, 0)`;
                        isTransitioning = false;
                    }
                    prevTranslate = currentTranslate;
                    startAutoSlide();
                }

                categoriesContainer.addEventListener('mousedown', startDrag);
                categoriesContainer.addEventListener('mousemove', moveDrag);
                categoriesContainer.addEventListener('mouseup', endDrag);
                categoriesContainer.addEventListener('mouseleave', endDrag);
                categoriesContainer.addEventListener('touchstart', startDrag);
                categoriesContainer.addEventListener('touchmove', moveDrag);
                categoriesContainer.addEventListener('touchend', endDrag);
                categoriesContainer.addEventListener('selectstart', (e) => e.preventDefault());
            }

            window.addEventListener('resize', () => {
                if (!categories.length) return;
                initializeCategories();
            });
        });
</script>