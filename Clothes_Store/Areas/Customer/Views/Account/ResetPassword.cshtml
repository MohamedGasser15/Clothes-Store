@using Clothes_Store.Models.ViewModels
@model ResetPasswordViewModel
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password - Cara Store</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gradient-to-br from-gray-100 to-[#d9f3ee] flex items-center justify-center min-h-screen relative">
    <div class="w-full max-w-md bg-white shadow-lg rounded-lg p-8">
        <div class="text-center">
            <h2 class="text-3xl font-bold text-[#088178] mt-4">Reset Password</h2>
            <p class="text-lg text-gray-500">Create New Password</p>
        </div>

        @if (TempData["ErrorMessage"] != null)
        {
            <div id="errorMessage" class="fixed top-10 right-10 bg-red-100 text-red-800 py-2 px-4 rounded-lg shadow-md">
                @TempData["ErrorMessage"]
            </div>
        }

        <form class="mt-6" id="loginForm" method="post">
            <input asp-for="Email" hidden />

            <div asp-validation-summary="All" class="text-danger"></div>

            <div>
                <label asp-for="NewPassword" class="block text-gray-700 font-medium mb-2">New Password</label>
                <input asp-for="NewPassword" type="password" id="NewPassword" placeholder="Enter your password"
                       class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:border-[#088178] focus:outline-none focus:bg-white">
                <span asp-validation-for="NewPassword" class="text-danger"></span>
            </div>

            <div class="mt-4">
                <label asp-for="ConfirmPassword" class="block text-gray-700 font-medium mb-2">Confirm Password</label>
                <input asp-for="ConfirmPassword" type="password" id="ConfirmPassword" placeholder="Confirm your password"
                       class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:border-[#088178] focus:outline-none focus:bg-white">
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>

            <button type="submit" id="loginButton"
                    class="w-full mt-6 bg-[#088178] text-white py-2 rounded-lg text-lg font-semibold hover:bg-[#066b62] transition duration-300 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center"
                    disabled>
                <span id="loginText">Change Password</span>
                <div id="loadingSpinner" class="hidden ml-2 w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
            </button>
        </form>
    </div>

    <script >

                const emailInput = document.getElementById("email");
        const newPasswordInput = document.getElementById("NewPassword"); // Updated id to match the field
        const confirmPasswordInput = document.getElementById("ConfirmPassword"); // Updated id to match the field
        const loginButton = document.getElementById("loginButton");
        const loginText = document.getElementById("loginText");
        const loadingSpinner = document.getElementById("loadingSpinner");

        window.onload = function () {
            emailInput.focus();
        };

        function checkInputs() {
            // Check if both password fields are not empty
            if (newPasswordInput.value.trim() !== "" && confirmPasswordInput.value.trim() !== "") {
                loginButton.removeAttribute("disabled");
            } else {
                loginButton.setAttribute("disabled", "true");
            }
        }

        newPasswordInput.addEventListener("input", checkInputs);
        confirmPasswordInput.addEventListener("input", checkInputs);

        document.getElementById("loginForm").addEventListener("submit", function (event) {
            event.preventDefault();
            loginText.classList.add("hidden");
            loadingSpinner.classList.remove("hidden");
            loginButton.setAttribute("disabled", "true");

            setTimeout(() => {
                this.submit();
            }, 2000);
        });

    </script>
    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
    }
</body>
</html>
