@using Clothes_Models.Models
@using Clothes_Models.ViewModels
@model CartViewModel

<script src="https://cdn.tailwindcss.com"></script>

<div class="min-h-screen bg-white py-8 px-4 sm:px-6 lg:px-8">
    <!-- Success Notification -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div id="successMessage" class="fixed top-6 right-6 z-50 animate-fade-in">
            <div class="bg-[#e6f7f5] border border-[#088178] text-[#088178] px-6 py-4 rounded-lg shadow-lg flex items-center justify-between max-w-md">
                <span class="flex items-center">
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                    @TempData["SuccessMessage"]
                </span>
                <button type="button" class="text-[#088178] hover:text-[#06615a]" onclick="closeMessage('successMessage')">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
        </div>
    }

    <!-- Main Cart Container -->
    <!-- Main Cart Container -->
    <div class="max-w-7xl mx-auto">
        <!-- Header -->
        <div class="text-center mb-12">
            <h1 class="text-3xl font-bold text-gray-900 mb-2">Your Shopping Cart</h1>
            <p class="text-gray-500">Review and manage your items</p>
        </div>

        <div class="flex flex-col lg:flex-row gap-8">
            <!-- Cart Items -->
            <div class="lg:w-2/3">
                @if (Model.Items.Any())
                {
                    <div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden">
                        <!-- Table Header -->
                        <div class="hidden md:grid grid-cols-12 bg-gray-50 px-6 py-4 border-b border-gray-100">
                            <div class="col-span-5 font-medium text-gray-500">Product</div>
                            <div class="col-span-2 font-medium text-gray-500 text-center">Price</div>
                            <div class="col-span-3 font-medium text-gray-500 text-center">Quantity</div>
                            <div class="col-span-2 font-medium text-gray-500 text-right">Total</div>
                        </div>

                        <!-- Cart Items -->
                        <div class="divide-y divide-gray-100">
                            @foreach (var item in Model.Items)
                            {
                                <div class="p-4 md:p-6 grid grid-cols-1 md:grid-cols-12 gap-4 items-center">
                                    <!-- Product Info -->
                                    <div class="col-span-5 flex items-center space-x-4">
                                        <div class="flex-shrink-0">
                                            @if (!string.IsNullOrEmpty(item.Product.imgUrl))
                                            {
                                                <img src="@item.Product.imgUrl" alt="@item.Product.Product_Name" class="w-20 h-20 object-cover rounded-lg">
                                            }
                                            else
                                            {
                                                <div class="w-20 h-20 bg-gray-100 rounded-lg flex items-center justify-center">
                                                    <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                                    </svg>
                                                </div>
                                            }
                                        </div>
                                        <div>
                                            <h3 class="font-medium text-gray-900">@item.Product.Product_Name</h3>
                                            <p class="text-sm text-gray-500 mt-1">@item.Product.Product_Description</p>

                                            <!-- Size Selection Dropdown -->
                                            <div class="mt-3">
                                                <div class="flex items-center">
                                                    <!-- Size Label -->
                                                    <span class="text-sm font-medium text-gray-700 mr-2">Size:</span>

                                                    <!-- Size Display -->
                                                    @if (item.Product.Stocks != null && item.Product.Stocks.Any(s => s.Size == item.Size))
                                                    {
                                                        <div class="inline-flex items-center justify-center px-3 py-1 rounded-full
                        bg-[#f0f7f6] text-[#088178] border border-[#cce7d0]
                        text-sm font-medium">
                                                            @item.Size
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <span class="text-sm text-red-500 italic">Not specified</span>
                                                    }
                                                </div>


                                            </div>
                                        </div>
                                    </div>

                                    <!-- Price -->
                                    <div class="col-span-2 text-center text-gray-700">
                                        @item.Product.Product_Price.ToString("C")
                                    </div>

                                    <!-- Quantity -->
                                    <div class="col-span-3">
                                        <div class="flex items-center justify-center space-x-2">
                                            <form asp-action="DecreaseQuantity" method="post">
                                                <input type="hidden" name="id" value="@item.Id" />
                                                <button type="submit"
                                                        class="w-8 h-8 flex items-center justify-center border border-gray-300 rounded-full text-gray-500 hover:bg-gray-50">
                                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4"></path>
                                                    </svg>
                                                </button>
                                            </form>

                                            <span class="w-10 text-center">@item.Quantity</span>

                                            <form asp-action="IncreaseQuantity" method="post">
                                                <input type="hidden" name="id" value="@item.Id" />
                                                <button type="submit"
                                                        class="w-8 h-8 flex items-center justify-center border border-gray-300 rounded-full text-gray-500 hover:bg-gray-50">
                                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                                                    </svg>
                                                </button>
                                            </form>
                                        </div>
                                    </div>

                                    <!-- Total & Remove -->
                                    <div class="col-span-2 flex items-center justify-end space-x-4">
                                        <span class="font-medium text-gray-900">@((item.Quantity * item.Product.Product_Price).ToString("C"))</span>
                                        <form asp-action="RemoveFromCart" method="post" id="removeForm-@item.Id">
                                            <input type="hidden" name="id" value="@item.Id" />
                                            @Html.AntiForgeryToken()
                                            <button type="button" onclick="confirmRemoveItem('@item.Id')"
                                                    class="text-gray-400 hover:text-red-500">
                                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                                </svg>
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
                else
                {
                    <div class="fixed inset-0 flex items-center justify-center bg-white z-10">
                        <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-12 text-center max-w-md mx-4">
                            <!-- Shopping Bag Icon with Pulse Animation -->
                            <div class="mx-auto w-24 h-24 mb-6 flex items-center justify-center relative">
                                <div class="absolute inset-0 bg-gray-100 rounded-full animate-pulse"></div>
                                <svg class="relative w-16 h-16 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
                                </svg>
                            </div>

                            <!-- Empty Cart Message -->
                            <h3 class="text-2xl font-bold text-gray-900 mb-3">Your Shopping Bag is Empty</h3>
                            <p class="text-gray-500 mb-8">Start adding some amazing products to your cart</p>

                            <!-- Shop Now Button with Enhanced Styling -->
                            <div class="mt-6">
                                <a asp-area="Customer" asp-controller="Home" asp-action="Shop"
                                   class="inline-flex items-center px-8 py-3.5 text-base font-medium rounded-md shadow-sm text-white bg-[#088178] hover:bg-[#06615a] transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#088178]">
                                    <svg class="-ml-1 mr-2 h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z"></path>
                                    </svg>
                                    Continue Shopping
                                </a>
                            </div>

                            <!-- Continue Browsing Link -->
                            <div class="mt-6">
                                <a href="/" class="text-sm text-[#088178] hover:underline font-medium">
                                    or keep browsing our collection
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <!-- Order Summary -->
            @if (Model.Items.Any())
            {
                <div class="lg:w-1/3">
                    <div class="bg-white rounded-xl shadow-sm border border-gray-100 sticky top-6">
                        <div class="p-6 border-b border-gray-100">
                            <h2 class="text-lg font-medium text-gray-900">Order Summary</h2>
                        </div>

                        <div class="p-6 space-y-4">
                            <div class="flex justify-between">
                                <span class="text-gray-600">Subtotal</span>
                                <span class="font-medium subtotal-value">@Model.OrderHeader.Subtotal.ToString("C")</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-gray-600">Shipping</span>
                                <span class="font-medium shipping-value">@Model.OrderHeader.ShippingFee.ToString("C")</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-gray-600">Tax</span>
                                <span class="font-medium tax-value">@Model.OrderHeader.Tax.ToString("C")</span>
                            </div>
                            <div class="border-t border-gray-200 pt-4 flex justify-between">
                                <span class="font-medium">Total</span>
                                <span class="font-bold text-lg total-value">@Model.OrderHeader.OrderTotal.ToString("C")</span>
                            </div>
                        </div>

                        <div class="p-6 bg-gray-50 rounded-b-xl">
                            <a asp-area="Customer" asp-controller="Cart" asp-action="Summary"
                               class="w-full flex items-center justify-center px-6 py-3 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-[#088178] hover:bg-[#06615a] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#088178]">
                                Proceed to Checkout
                            </a>
                            <div class="mt-4 flex items-center justify-center text-sm text-gray-500">
                                <svg class="flex-shrink-0 mr-1.5 h-4 w-4 text-[#088178]" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                                </svg>
                                Secure checkout
                            </div>
                        </div>
                    </div>

                    <div class="mt-6 flex flex-col sm:flex-row gap-4">
                        <a asp-area="Customer" asp-controller="Home" asp-action="Shop"
                           class="flex-1 inline-flex items-center justify-center px-5 py-2.5 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#088178]">
                            <svg class="-ml-1 mr-2 h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                            </svg>
                            Continue Shopping
                        </a>
                        <button onclick="confirmClearCart()"
                                class="flex-1 inline-flex items-center justify-center px-5 py-2.5 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-red-500 hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                            <svg class="-ml-1 mr-2 h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                            </svg>
                            Clear All
                        </button>

                        <!-- Move the form outside the button -->
                        <form id="clearCartForm" asp-action="ClearCart" method="post" style="display: none;">
                            @Html.AntiForgeryToken()
                        </form>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function closeMessage(id) {
            let element = document.getElementById(id);
            if (element) {
                element.classList.add('animate-fade-out');
                setTimeout(() => element.remove(), 1000);
            }
        }

        function confirmRemoveItem(itemId) {
            Swal.fire({
                title: 'Remove this item?',
                text: "This item will be removed from your cart.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#088178',
                confirmButtonText: 'Yes, remove it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    document.getElementById(`removeForm-${itemId}`).submit();
                }
            });
        }

        function confirmClearCart() {
            Swal.fire({
                title: 'Clear your cart?',
                text: "All items will be removed from your cart.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#088178',
                confirmButtonText: 'Yes, clear it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    document.getElementById('clearCartForm').submit();
                }
            });
        }

        document.addEventListener("DOMContentLoaded", function() {
            setTimeout(() => {
                closeMessage('successMessage');
            }, 5000);
        });

        function updateSize(itemId, newSize) {
            fetch('/Customer/Cart/UpdateSize', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({
                    itemId: itemId,
                    size: newSize
                })
            }).then(response => response.json()).then(data => {
                if (data.success) {
                    // Show success notification
                    const notification = document.createElement('div');
                    notification.className = 'fixed bottom-4 right-4 bg-[#088178] text-white px-4 py-2 rounded-md text-sm';
                    notification.textContent = data.message;
                    document.body.appendChild(notification);
                    setTimeout(() => notification.remove(), 2000);

                    // Optionally, reload the page to reflect merged items
                    setTimeout(() => location.reload(), 2000);
                } else {
                    // Show error notification
                    const notification = document.createElement('div');
                    notification.className = 'fixed bottom-4 right-4 bg-red-500 text-white px-4 py-2 rounded-md text-sm';
                    notification.textContent = data.message;
                    document.body.appendChild(notification);
                    setTimeout(() => notification.remove(), 2000);
                }
            }).catch(error => {
                console.error('Error updating size:', error);
                const notification = document.createElement('div');
                notification.className = 'fixed bottom-4 right-4 bg-red-500 text-white px-4 py-2 rounded-md text-sm';
                notification.textContent = 'Error updating size';
                document.body.appendChild(notification);
                setTimeout(() => notification.remove(), 2000);
            });
        }
    </script>
}

<style>
    .animate-fade-in {
        opacity: 0;
        transform: translateY(-10px);
        animation: fadeIn 0.3s ease-out forwards;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .animate-fade-out {
        animation: fadeOut 0.3s ease-out forwards;
    }

    @@keyframes fadeOut {
        from {
            opacity: 1;
            transform: translateY(0);
        }

        to {
            opacity: 0;
            transform: translateY(-10px);
        }
    }
</style>